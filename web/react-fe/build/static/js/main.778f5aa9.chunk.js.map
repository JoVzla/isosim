{"version":3,"sources":["components/Utils/Properties.js","components/Dialogs/AlertDialog.js","components/Utils/PinGenBox.js","components/Utils/FieldValidator.js","components/Utils/MsgUtils.js","components/Utils/MacGenBox.js","components/Utils/FieldExtras.js","components/Iso/IsoField/IsoField.js","components/Dialogs/SelectMessageDialog.js","components/Iso/ResponseSegment.js","components/Dialogs/ParseMessageDialog.js","components/Dialogs/SaveMessageDialog.js","components/Utils/NetworkSettings.js","components/Utils/MsgHistPanel.js","components/Utils/CryptoUtils.js","components/Iso/MessageStructure.js","components/Navigation/SpecTree/StyledTreeItem.js","components/Navigation/SpecTree/SpecTree.js","components/Navigation/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["AppProps","this","baseUrl","sendMsgUrl","loadMsgUrl","allSpecsUrl","templateUrl","parseTraceUrl","saveMsgUrl","pinGenUrl","macGenUrl","logHistUrl","FixedField","VariableField","BitmappedField","appProps","AlertDialog","props","state","show","handleClose","bind","setState","onClose","prevProps","prevState","snapshot","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","msg","DialogActions","Button","onClick","color","React","Component","PinGenBox","from","to","panID","field","initialPan","pinGenProps","PinGenProps","PANFieldID","PANExtractParams","match","split","originalPan","isoMsg","panField","get","fieldValue","substring","pinFormat","pan","clearPin","pinKey","GenType","PINFormat","PINClear","PINKey","hasError","errorMsg","generatePinBlock","panValueChanged","formatChanged","keyValueChanged","pinValueChanged","doNothing","tmp","length","pinError","keyError","panError","data","PAN","axios","post","JSON","stringify","then","res","setPinBlock","PinBlock","catch","err","error","console","log","event","target","value","Fragment","Box","border","borderColor","borderRadius","style","paddingBottom","padding","Grid","container","spacing","alignItems","item","xs","TextField","size","label","onChange","variant","margin","fullWidth","select","MenuItem","justify","float","fieldValidator","validate","fieldData","errors","validationFailed","Type","DataEncoding","FixedSize","push","Name","dataErr","fieldLen","MinSize","MaxSize","MsgUtils","content","validationErrors","isoField","ID","selected","setError","Value","Children","forEach","cf","addFieldContent","fields","f","MacGenBox","macAlgo","MacGenProps","MacAlgo","macKey","MacKey","generateMac","algoChanged","reqData","undefined","macData","mac_algo","mac_key","mac_data","getMsgContent","errMsg","e","spec_id","msg_id","parsed_fields","setMac","Mac","response","status","FieldExtras","closeThis","valueChanged","setValue","val","dynamicGenerators","readOnly","width","height","paddingTop","rows","multiline","disabled","IsoField","fieldValueChanged","fieldSelectionChanged","onFieldUpdate","appendFieldContent","setSelected","setNewValue","showExpanded","closeExpanded","getBgColor","toggleExpanded","onFocusLost","applyPadding","selectable","id2Value","fieldEditable","bgColor","expandBtnLabel","defaultFieldValue","has","tmpField","includes","Array","fill","reduce","p","c","set","newValue","fieldName","currentVal","bits","ChangeType","Position","turnOff","i","obj","checked","initVal","Padding","startsWith","expectedLength","endsWith","parentField","level","key","selectionColumnContent","align","Checkbox","type","positionInParent","ParentId","fieldInfo","LengthIndicatorSize","LengthEncoding","children","levelIndicator","OverlayTrigger","overlay","Tooltip","fontSize","placement","InputLabel","helperText","onBlur","marginRight","marginLeft","colSpan","SelectMessageDialog","selectedMsg","closeDialogSuccess","closeDialogFail","selectedMsgChanged","params","specId","msgId","savedMsgs","saved_messages","errorMessage","closeLoadMsgDialog","map","sm","maxWidth","lg","xl","ResponseSegment","msgTemplate","hideResponseSegment","copyToClipboard","textAreaRef","createRef","idToField","idToValue","collectData","current","document","execCommand","alert","forClipboard","Map","clipboardText","currentIndex","scroll","PaperComponent","disableBackdropClick","cursor","dialogTitle","dividers","Paper","ref","opacity","position","zIndex","fontFamily","backgroundColor","borderBottom","handle","cancel","ParseMessageDialog","traceMsg","traceChanged","isValidTrace","trace","trim","updatedTrace","setTrace","SaveMessageDialog","msgName","initialMessage","msgNameChanged","updateIfExistsChanged","postData","updateIfExists","msgSaveSuccess","msgSaveFailed","msgSaveCancelled","FormControlLabel","control","NetworkSettings","targetServerIp","serverIP","targetServerPort","port","mliType","serverIpChanged","serverPortChanged","mliTypeChanged","setStateAndPushUp","marginBottom","textAlign","verticalAlign","marginTop","MsgHistPanel","maxItems","initialMaxItems","logData","initialLogData","maxItemsChanged","fetchLogs","displayData","saveState","rowsMax","contentEditable","CryptoUtilsBox","pinField","PANFieldId","macField","pinBlock","mac","setPinValue","setMacValue","macDataChanged","direction","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","MessageStructure","loaded","spec","shouldShow","showMsgTemplate","currentDataSet","errDialogVisible","showLoadMessagesDialog","showTraceInputDialog","showSaveMsgDialog","showResponse","responseData","reqMenuVisible","selectedReqMenuItem","reqClipboardData","selectedTab","msgHist","sendToHost","showErrorDialog","closeErrorDialog","processError","showUnImplementedError","showTraceInputsDialog","showInfoDialog","showMenu","hideMenu","handleMenuClick","showResponseDialog","getTemplateLabel","networkSettingsChanged","hideResponse","tabChanged","saveHistState","stateObj","histState","ip","currentTarget","fd","dsName","saved_message","updated","saveData","response_fields","getMessageTemplate","pSpec","pMsg","specs","find","s","Messages","m","url","AppBar","Tabs","aria-label","centered","Tab","TabPanel","index","display","ButtonGroup","variation","other","role","hidden","useTreeItemStyles","makeStyles","theme","root","palette","text","secondary","action","hover","grey","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","paddingLeft","expanded","labelRoot","labelIcon","labelText","flexGrow","StyledTreeItem","classes","LabelIcon","labelInfo","TreeItem","className","SpecTree","nodeSelected","selectedNode","matches","treeInstance","msgSelected","timerId","setInterval","clearInterval","nodeId","sid","mid","icon","Folder","buildMessages","treeContent","Home","TreeView","onNodeSelect","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","Message","NavBar","currentSpec","currentSpecMsg","specChanged","messageChanged","getSpecByID","msgTemplateRef","parseInt","getCurrentSpec","Modal","onHide","Header","closeButton","Title","Body","Footer","name","App","href","rel","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.778f5aa9.chunk.js","sourcesContent":["// AppProps are various URL's that are used by axios\r\nexport class AppProps {\r\n\r\n  static FixedField = \"Fixed\";\r\n  static VariableField = \"Variable\";\r\n  static BitmappedField = \"Bitmapped\";\r\n\r\n  constructor() {\r\n    //this.baseUrl = 'http://localhost:8080';\r\n    this.baseUrl = '';\r\n    this.sendMsgUrl = this.baseUrl + '/iso/v1/send';\r\n    this.loadMsgUrl = this.baseUrl + '/iso/v1/loadmsg';\r\n    this.allSpecsUrl = this.baseUrl + '/iso/v1/specs';\r\n    this.templateUrl = this.baseUrl + '/iso/v1/template';\r\n    this.parseTraceUrl = this.baseUrl + '/iso/v1/parse';\r\n    this.saveMsgUrl = this.baseUrl + '/iso/v1/save';\r\n    this.pinGenUrl = this.baseUrl + '/iso/v1/crypto/pin_gen';\r\n    this.macGenUrl = this.baseUrl + '/iso/v1/crypto/mac_gen';\r\n\r\n    this.logHistUrl = this.baseUrl + '/iso/v1/websim/msg_hist/last_n';\r\n  }\r\n\r\n}\r\n\r\nlet appProps = new AppProps();\r\nexport default appProps;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class AlertDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show};\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({show: false})\r\n    this.props.onClose();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (this.props.show === true && prevState.show === false) {\r\n      this.setState({show: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<Dialog\r\n        open={this.state.show}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle\r\n          id=\"alert-dialog-title\">{\"Alert!\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {this.props.msg}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={this.handleClose} color=\"primary\">\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>);\r\n\r\n  }\r\n}","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport axios from \"axios\";\r\nimport appProps from \"./Properties\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\n\r\nexport default class PinGenBox extends React.Component {\r\n\r\n  field;\r\n  from = 0;\r\n  to = 0;\r\n  panID = 0;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.field = this.props.field;\r\n\r\n    let initialPan = \"\";\r\n    let pinGenProps = this.field.PinGenProps;\r\n\r\n    if (this.field.PinGenProps.PANFieldID !== 0) {\r\n      this.panID = this.field.PinGenProps.PANFieldID;\r\n    }\r\n\r\n    if (pinGenProps.PANFieldID !== 0 && pinGenProps.PANExtractParams !== \"\"\r\n        && pinGenProps.PANExtractParams.match(\"[0-9]+:[0-9]+\")) {\r\n\r\n      [this.from, this.to] = pinGenProps.PANExtractParams.split(\":\");\r\n\r\n    }\r\n\r\n    let originalPan = \"\";\r\n    if (this.props.isoMsg) {\r\n      let panField = this.props.isoMsg.get(this.panID);\r\n      if (panField) {\r\n        originalPan = panField.state.fieldValue;\r\n        initialPan = originalPan;\r\n\r\n        if (this.from >= 0 && this.to > this.from) {\r\n          initialPan = panField.state.fieldValue.substring(this.from, this.to);\r\n        }\r\n      }\r\n    } else {\r\n      this.state = {pinFormat: \"ISO0\", pan: initialPan, clearPin: \"\", pinKey: \"\"}\r\n    }\r\n\r\n    if (this.field.GenType === 'pin_gen') {\r\n      this.state = {\r\n        pinFormat: this.field.PinGenProps.PINFormat,\r\n        pan: initialPan,\r\n        originalPan: originalPan,\r\n        clearPin: this.field.PinGenProps.PINClear,\r\n        pinKey: this.field.PinGenProps.PINKey,\r\n        hasError: false,\r\n        errorMsg: null\r\n      }\r\n    }\r\n\r\n    this.generatePinBlock = this.generatePinBlock.bind(this);\r\n    this.panValueChanged = this.panValueChanged.bind(this);\r\n    this.formatChanged = this.formatChanged.bind(this);\r\n    this.keyValueChanged = this.keyValueChanged.bind(this);\r\n    this.pinValueChanged = this.pinValueChanged.bind(this);\r\n    this.doNothing = this.doNothing.bind(this);\r\n\r\n  }\r\n\r\n  doNothing() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (!this.props.isoMsg) {\r\n      return\r\n    }\r\n\r\n    let tmp = this.props.isoMsg.get(this.panID);\r\n    if (tmp) {\r\n\r\n      if (this.state.originalPan !== tmp.state.fieldValue) {\r\n\r\n        // if the pan has changed, record it\r\n        let originalPan = tmp.state.fieldValue;\r\n        let pan = \"\";\r\n        if (this.from >= 0 && this.to > this.from) {\r\n          pan = tmp.state.fieldValue.substring(this.from, this.to);\r\n        } else {\r\n          pan = tmp.state.fieldValue\r\n        }\r\n\r\n        this.setState({pan: pan, originalPan: originalPan})\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  generatePinBlock() {\r\n\r\n    if (this.state.pan === \"\") {\r\n      this.setState({panError: true})\r\n      return;\r\n    }\r\n\r\n    if (this.state.clearPin === \"\" || this.state.clearPin.length < 4 || this.state.clearPin.length\r\n        > 12) {\r\n      this.setState({pinError: true})\r\n      return;\r\n    }\r\n\r\n    if (this.state.pinKey === \"\" || (this.state.pinKey.length !== 16 && this.state.pinKey.length\r\n        !== 32)) {\r\n      this.setState({keyError: true})\r\n      return\r\n    }\r\n\r\n    this.setState({keyError: false, pinError: false, panError: false});\r\n\r\n    let data = {\r\n      PINClear: this.state.clearPin,\r\n      PINFormat: this.state.pinFormat,\r\n      PINKey: this.state.pinKey,\r\n      PAN: this.state.pan\r\n    };\r\n\r\n    //console.log(JSON.stringify(data))\r\n    axios.post(appProps.pinGenUrl, JSON.stringify(data)).then(res => {\r\n      this.props.setPinBlock(res.data.PinBlock);\r\n    }).catch(err => {\r\n      let errorMsg = \"Failed to generate PIN block: \";\r\n      if (err.error) {\r\n        errorMsg = errorMsg + err.error\r\n      } else {\r\n        errorMsg = errorMsg + err;\r\n      }\r\n\r\n      this.setState({hasError: true, errorMsg: errorMsg});\r\n      console.log(\"error= \", err);\r\n    })\r\n\r\n  }\r\n\r\n  formatChanged(event) {\r\n    this.setState({pinFormat: event.target.value});\r\n  }\r\n\r\n  pinValueChanged(event) {\r\n    this.setState({clearPin: event.target.value});\r\n  }\r\n\r\n  panValueChanged(event) {\r\n    this.setState({pan: event.target.value});\r\n  }\r\n\r\n  keyValueChanged(event) {\r\n    this.setState({pinKey: event.target.value});\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.field.GenType !== 'pin_gen') {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n          <AlertDialog show={this.state.hasError} msg={this.state.errorMsg}\r\n                       onClose={this.doNothing}/>\r\n\r\n          <Box border={1} borderColor={\"primary.main\"} borderRadius={4}>\r\n            <div style={{paddingBottom: \"10px\", padding: \"5px\"}}>\r\n              <Grid container spacing={0}>\r\n\r\n                <Grid container spacing={1} alignItems={\"flex-start\"}>\r\n                  <Grid item xs={3}>\r\n                    <TextField size={\"small\"} label={\"Clear PIN\"} value={this.state.clearPin}\r\n                               onChange={this.pinValueChanged} error={this.state.pinError}\r\n                               variant={\"outlined\"} margin={\"dense\"}/>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField label={\"PIN Key\"} value={this.state.pinKey} variant={\"outlined\"}\r\n                               onChange={this.keyValueChanged} error={this.state.keyError}\r\n                               margin={\"dense\"} fullWidth={true}/>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField size={\"small\"} value={this.state.pinFormat} select={true}\r\n                               fullWidth={true}\r\n                               label={\"Format\"} onChange={this.formatChanged}\r\n                               variant={\"outlined\"} margin={\"dense\"}>\r\n                      <MenuItem value={\"ISO0\"}>ISO-0</MenuItem>\r\n                      <MenuItem value={\"ISO1\"}>ISO-1</MenuItem>\r\n                      <MenuItem value={\"ISO3\"}>ISO-3</MenuItem>\r\n                      <MenuItem value={\"IBM3264\"}>IBM-3264</MenuItem>\r\n                    </TextField>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} alignItems={\"flex-start\"}>\r\n                  <Grid item xs={12}>\r\n                    <TextField label={\"PAN\"} value={this.state.pan} variant={\"outlined\"}\r\n                               onChange={this.panValueChanged} error={this.state.panError}\r\n                               margin={\"dense\"}/>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={0} justify={\"flex-end\"} alignItems={\"flex-end\"}>\r\n                  <Grid item xs>\r\n                    <div style={{float: \"right\"}}>\r\n                      <Button size={\"small\"} variant={\"contained\"} onClick={this.generatePinBlock}\r\n                              color={\"primary\"}>Generate</Button>\r\n                    </div>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n          </Box>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n}","\r\n// FieldValidator provides validation logic for field values\r\nimport {AppProps} from \"./Properties\";\r\n\r\nclass FieldValidator {\r\n\r\n  constructor(props) {\r\n    this.validate = this.validate.bind(this);\r\n  }\r\n\r\n  validate(field, fieldData, errors) {\r\n\r\n    //console.log(\"validate\", field, fieldData, errors);\r\n    let validationFailed = false;\r\n\r\n    if (field.Type === AppProps.FixedField) {\r\n\r\n      if (field.DataEncoding === 'ASCII' || field.DataEncoding === 'EBCDIC') {\r\n        if (fieldData.length !== field.FixedSize) {\r\n          errors.push(\r\n              `\\u2b55 \"${field.Name}\" should have a fixed size of ${field.FixedSize} but has ${fieldData.length}`);\r\n          validationFailed = true;\r\n        }\r\n      } else {\r\n        if (fieldData.length !== 2 * field.FixedSize) {\r\n          errors.push(\r\n              `\\u2b55 \"${field.Name}\" should have a fixed size of ${field.FixedSize} but has ${fieldData.length\r\n              / 2}`);\r\n          validationFailed = true;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    let dataErr = false;\r\n\r\n    if (field.DataEncoding === 'BCD' || field.DataEncoding === 'BINARY') {\r\n      if (fieldData.length % 2 !== 0) {\r\n        errors.push(\r\n            `\\u2b55 \"${field.Name}\" should have even number of characters!`);\r\n        validationFailed = true;\r\n        dataErr = true;\r\n      }\r\n\r\n      if (field.DataEncoding === 'BINARY' && !fieldData.match(\r\n          \"^[0-9,a-f,A-F]+$\")) {\r\n        errors.push(`\\u2b55 \"${field.Name}\" supports only hex i.e 0-9,a-z,A-Z`);\r\n        validationFailed = true;\r\n      }\r\n      if (field.DataEncoding === 'BCD' && !fieldData.match(\"^[0-9]+$\")) {\r\n        errors.push(`\\u2b55 \"${field.Name}\" supports only bcd i.e 0-9`);\r\n        validationFailed = true;\r\n      }\r\n    }\r\n\r\n    if (!dataErr && field.Type === AppProps.VariableField) {\r\n\r\n      let fieldLen = fieldData.length;\r\n      if (field.DataEncoding === 'BCD' || field.DataEncoding === 'BINARY') {\r\n        fieldLen = fieldData.length / 2;\r\n      }\r\n\r\n      if (field.MinSize > 0 && fieldData.length < field.MinSize) {\r\n        errors.push(\r\n            `\\u2b55 \"${field.Name} size of ${fieldLen} is less than required min of ${field.MinSize}\" `);\r\n        validationFailed = true;\r\n      }\r\n      if (field.MaxSize > 0 && fieldData.length > field.MaxSize) {\r\n        errors.push(\r\n            `\\u2b55 \"${field.Name} size  of ${fieldLen} is greater than required max of ${field.MaxSize}\" `);\r\n        validationFailed = true;\r\n      }\r\n    }\r\n\r\n    //TODO:: other checks like content etc\r\n    return validationFailed;\r\n\r\n  }\r\n\r\n}\r\n\r\nlet fieldValidator = new FieldValidator();\r\nexport default fieldValidator;","import fieldValidator from \"./FieldValidator\";\r\n\r\nexport default class MsgUtils {\r\n\r\n  static addFieldContent(field, content, isoMsg, validationErrors) {\r\n\r\n    let isoField = isoMsg.get(field.ID);\r\n\r\n    if (isoField.state.selected) {\r\n      if (fieldValidator.validate(field, isoField.state.fieldValue, validationErrors)) {\r\n        isoField.setError(true);\r\n      } else {\r\n        isoField.setError(false);\r\n      }\r\n      content.push({ID: field.ID, Name: field.Name, Value: isoField.state.fieldValue});\r\n    }\r\n\r\n    field.Children.forEach(cf => {\r\n      if (isoField.state.selected) {\r\n        MsgUtils.addFieldContent(cf, content, isoMsg, validationErrors);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  static getMsgContent(isoMsg, content, validationErrors) {\r\n    isoMsg.get(\"msg_template\").fields.forEach(f => {\r\n      MsgUtils.addFieldContent(f, content, isoMsg, validationErrors);\r\n    });\r\n\r\n  };\r\n\r\n}\r\n\r\n\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport axios from \"axios\";\r\nimport appProps from \"./Properties\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\nimport MsgUtils from \"./MsgUtils.js\";\r\n\r\nexport default class MacGenBox extends React.Component {\r\n\r\n  field;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.field = this.props.field;\r\n\r\n    this.state = {\r\n      macAlgo: this.field.MacGenProps.MacAlgo,\r\n      macKey: this.field.MacGenProps.MacKey,\r\n      hasError: false,\r\n      errorMsg: null\r\n    }\r\n\r\n    this.generateMac = this.generateMac.bind(this);\r\n    this.algoChanged = this.algoChanged.bind(this);\r\n    this.keyValueChanged = this.keyValueChanged.bind(this);\r\n    this.doNothing = this.doNothing.bind(this);\r\n\r\n  }\r\n\r\n  doNothing() {\r\n    this.setState({hasError: false, errorMsg: null});\r\n  }\r\n\r\n  generateMac() {\r\n\r\n    if (this.state.macKey === \"\" || (this.state.macKey.length !== 16 && this.state.macKey.length\r\n        !== 32)) {\r\n      this.setState({keyError: true})\r\n      return\r\n    }\r\n\r\n    this.setState({keyError: false});\r\n\r\n    let content = []\r\n    let validationErrors = []\r\n\r\n    let reqData = {};\r\n\r\n    if (this.props.macData !== undefined) {\r\n\r\n      //if mac-data has been provided\r\n\r\n      if (this.props.macData.length === 0) {\r\n        this.setState({hasError: true, errorMsg: \"Invalid MacData supplied.\"});\r\n        return\r\n      } else {\r\n\r\n        this.setState({hasError: false, errorMsg: null});\r\n\r\n        let macData = this.props.macData;\r\n\r\n        reqData = {\r\n          mac_algo: this.state.macAlgo, mac_key: this.state.macKey, mac_data: macData\r\n        };\r\n      }\r\n\r\n    } else {\r\n\r\n      //mac_data is to be computed on the server-side\r\n\r\n      MsgUtils.getMsgContent(this.props.isoMsg, content, validationErrors);\r\n\r\n      if (validationErrors.length > 0) {\r\n        let errMsg = \"\";\r\n        validationErrors.forEach(e => errMsg += e + \"\\n\");\r\n        this.setState({hasError: true, errorMsg: errMsg});\r\n        return\r\n      }\r\n\r\n      reqData = {\r\n        mac_algo: this.state.macAlgo,\r\n        mac_key: this.state.macKey,\r\n        spec_id: this.props.isoMsg.get(\"spec_id\"),\r\n        msg_id: this.props.isoMsg.get(\"msg_id\"),\r\n        parsed_fields: content\r\n      };\r\n    }\r\n\r\n    axios.post(appProps.macGenUrl, JSON.stringify(reqData)).then(res => {\r\n      this.setState({hasError: false, errorMsg: null});\r\n      this.props.setMac(res.data.Mac);\r\n\r\n    }).catch(e => {\r\n      let errorMsg = \"Failed to generate MAC: \";\r\n      if (e.error) {\r\n        if (e.response.status === 400) {\r\n          errorMsg = errorMsg + e.response.data.error;\r\n        }\r\n\r\n      } else {\r\n        errorMsg = errorMsg + e;\r\n      }\r\n\r\n      this.setState({hasError: true, errorMsg: errorMsg});\r\n      console.log(\"error= \", e);\r\n    })\r\n\r\n  }\r\n\r\n  algoChanged(event) {\r\n    this.setState({macAlgo: event.target.value});\r\n  }\r\n\r\n  keyValueChanged(event) {\r\n    this.setState({macKey: event.target.value});\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.field.GenType !== 'mac_gen') {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n          <AlertDialog show={this.state.hasError} msg={this.state.errorMsg}\r\n                       onClose={this.doNothing}/>\r\n\r\n          <Box border={1} borderColor={\"primary.main\"} borderRadius={4}>\r\n            <div style={{paddingBottom: \"10px\", padding: \"5px\"}}>\r\n              <Grid container spacing={0}>\r\n\r\n                <Grid container spacing={1} alignItems={\"flex-start\"}>\r\n                  <Grid item xs={6}>\r\n                    <TextField label={\"MAC Key\"} value={this.state.macKey} variant={\"outlined\"}\r\n                               onChange={this.keyValueChanged} error={this.state.keyError}\r\n                               margin={\"dense\"} fullWidth={true}/>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField size={\"small\"} value={this.state.macAlgo} select={true}\r\n                               fullWidth={true}\r\n                               label={\"MAC Algorithm\"} onChange={this.algoChanged}\r\n                               variant={\"outlined\"} margin={\"dense\"}>\r\n                      <MenuItem value={\"ANSIX9_19\"}>ANSIX9_19</MenuItem>\r\n                    </TextField>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={0} justify={\"flex-end\"} alignItems={\"flex-end\"}>\r\n                  <Grid item xs>\r\n                    <div style={{float: \"right\"}}>\r\n                      <Button size={\"small\"} variant={\"contained\"} onClick={this.generateMac}\r\n                              color={\"primary\"}>Generate</Button>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n          </Box>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PinGenBox from \"./PinGenBox\";\r\nimport MacGenBox from \"./MacGenBox\";\r\n\r\n// FieldExtras shows additional options for a field and an option to view/edit\r\n// field value within a large field (TextArea) and is useful when editing fields with large values\r\nexport default class FieldExtras extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {show: this.props.show, value: this.props.value};\r\n    this.closeThis = this.closeThis.bind(this);\r\n    this.valueChanged = this.valueChanged.bind(this);\r\n    this.setValue = this.setValue.bind(this);\r\n  }\r\n\r\n  valueChanged(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  closeThis() {\r\n    this.setState({show: true});\r\n    this.props.onClose(this.state.value);\r\n  }\r\n\r\n  setValue(val) {\r\n    this.setState({value: val})\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.show === false && this.props.show === true && this.state.show === false) {\r\n      this.setState({show: true, value: this.props.value})\r\n    } else if (this.props.show === false && this.state.show === true) {\r\n      this.setState({show: false, value: this.props.value})\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let dynamicGenerators = null;\r\n\r\n    if (!this.props.readOnly) {\r\n      //only for request fields\r\n\r\n      if (this.props.field.GenType === 'pin_gen') {\r\n        dynamicGenerators = <PinGenBox field={this.props.field} setPinBlock={this.setValue}\r\n                                       isoMsg={this.props.isoMsg}/>\r\n      } else if (this.props.field.GenType === 'mac_gen') {\r\n        dynamicGenerators =\r\n            <MacGenBox field={this.props.field} setMac={this.setValue} isoMsg={this.props.isoMsg}/>\r\n      }\r\n    }\r\n\r\n    return (\r\n\r\n        (this.state.show === true) ?\r\n\r\n            <React.Fragment>\r\n              <div style={{\r\n                width: '100%', height: '100%', paddingTop: \"20px\", paddingBottom: \"20px\"\r\n              }}>\r\n\r\n                {dynamicGenerators}\r\n                <div style={{paddingBottom: \"5px\", paddingTop: \"10px\"}}>\r\n                  <TextField fullWidth={true} rows={4} multiline={true} variant={\"outlined\"}\r\n                             label={\"Field Value\"} style={{paddingBottom: \"5px\"}}\r\n                             onChange={this.valueChanged} disabled={this.props.readOnly}\r\n                             value={this.state.value}/>\r\n\r\n                  <div style={{float: \"right\", paddingBottom: '5px'}}>\r\n                    <Button size={\"small\"} variant={\"contained\"} color={\"primary\"}\r\n                            onClick={this.closeThis}> OK </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </React.Fragment> : null);\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport FieldExtras from '../../Utils/FieldExtras.js'\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport fieldValidator from \"../../Utils/FieldValidator\";\r\nimport {AppProps} from \"../../Utils/Properties\";\r\n\r\n// IsoField represents a single field from a ISO8583 specification\r\nexport default class IsoField extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fieldValueChanged = this.fieldValueChanged.bind(this);\r\n    this.fieldSelectionChanged = this.fieldSelectionChanged.bind(this);\r\n    this.onFieldUpdate = this.onFieldUpdate.bind(this);\r\n    this.appendFieldContent = this.appendFieldContent.bind(this);\r\n    this.setSelected = this.setSelected.bind(this);\r\n    this.setNewValue = this.setNewValue.bind(this);\r\n    this.showExpanded = this.showExpanded.bind(this);\r\n    this.closeExpanded = this.closeExpanded.bind(this);\r\n    this.getBgColor = this.getBgColor.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n    this.toggleExpanded = this.toggleExpanded.bind(this);\r\n    this.onFocusLost = this.onFocusLost.bind(this);\r\n    this.applyPadding = this.applyPadding.bind(this);\r\n\r\n    //if the field is Message Type, MTI or Bitmap - it should stay selected\r\n    //because they're mandatory fields in ISO\r\n\r\n    let initialExpandBtnLabel = '+';\r\n    this.selectable = true;\r\n\r\n    if (this.props.readOnly) {\r\n      //readOnly is true when displaying a response segment\r\n\r\n      this.selectable = false;\r\n\r\n      let selected = false;\r\n      let fieldValue = this.props.id2Value.get(this.props.field.ID)\r\n      if (fieldValue) {\r\n        selected = true;\r\n      }\r\n\r\n      this.state = {\r\n        fieldEditable: true,\r\n        bgColor: 'white',\r\n        hasError: false,\r\n        selected: selected,\r\n        id2Value: this.props.id2Value,\r\n        fieldValue: fieldValue,\r\n        expandBtnLabel: initialExpandBtnLabel,\r\n        showExpanded: false,\r\n        field: this.props.field\r\n      };\r\n    } else {\r\n\r\n      // for request segment\r\n\r\n      let defaultFieldValue = \"\";\r\n      let selected = false;\r\n\r\n      if (this.props.isoMsg.has(this.props.field.ID)) {\r\n        let tmpField = this.props.isoMsg.get(this.props.field.ID)\r\n        defaultFieldValue = tmpField.state.fieldValue;\r\n        selected = tmpField.state.selected;\r\n      }\r\n\r\n      if ([\"Message Type\", \"MTI\", \"Bitmap\"].includes(this.props.field.Name)) {\r\n        this.selectable = false;\r\n        let fieldEditable = true;\r\n        if (defaultFieldValue === \"\" && this.props.field.Name === \"Bitmap\") {\r\n          defaultFieldValue = Array(128).fill('0').reduce((p = \"\", c) => p + c);\r\n        }\r\n\r\n        if (this.props.field.Name === \"Bitmap\") {\r\n          fieldEditable = false;\r\n        }\r\n\r\n        this.state = {\r\n          fieldEditable: fieldEditable,\r\n          bgColor: \"white\",\r\n          hasError: false,\r\n          selected: true,\r\n          fieldValue: defaultFieldValue,\r\n          expandBtnLabel: initialExpandBtnLabel,\r\n          showExpanded: false,\r\n          field: this.props.field\r\n        };\r\n\r\n      } else {\r\n        this.state = {\r\n          fieldEditable: true,\r\n          bgColor: \"white\",\r\n          selected: selected,\r\n          hasError: false,\r\n          fieldValue: defaultFieldValue,\r\n          expandBtnLabel: initialExpandBtnLabel,\r\n          showExpanded: false,\r\n          field: this.props.field\r\n        };\r\n      }\r\n      this.props.isoMsg.set(this.props.field.ID, this);\r\n    }\r\n  }\r\n\r\n  getBgColor() {\r\n    if (this.state.hasError) {\r\n      return \"red\";\r\n    } else {\r\n      return \"white\";\r\n    }\r\n\r\n  }\r\n\r\n  setError(hasError) {\r\n    this.setState({hasError: hasError});\r\n  }\r\n\r\n  showExpanded() {\r\n    this.setState({showExpanded: true});\r\n  }\r\n\r\n  toggleExpanded() {\r\n    if (this.state.showExpanded) {\r\n      this.setState({showExpanded: false, expandBtnLabel: '+'});\r\n    } else {\r\n      this.setState({showExpanded: true, expandBtnLabel: '-'});\r\n    }\r\n\r\n  }\r\n\r\n  closeExpanded() {\r\n    this.setState({showExpanded: false});\r\n  }\r\n\r\n  setNewValue(newValue) {\r\n\r\n    let val = this.applyPadding(this.state.selected, newValue);\r\n    this.setState({fieldValue: val, showExpanded: false, selected: true});\r\n    this.toggleExpanded()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.id2Value !== this.props.id2Value) {\r\n      this.setState({\r\n        fieldValue: this.props.id2Value.get(this.props.field.ID), id2Value: this.props.id2Value\r\n      });\r\n    }\r\n  }\r\n\r\n  onFieldUpdate(event) {\r\n    //console.log(\"onField Update\", this.props.field);\r\n    //console.log(\r\n    //    `${this.props.field.Name}: Child field ${event.fieldName} has been updated. ChangeType: ${event.ChangeType}`);\r\n\r\n    if (this.props.field.Type === AppProps.BitmappedField) {\r\n      // get the position of the field\r\n      this.props.field.Children.forEach(f => {\r\n\r\n        if (f.Name === event.fieldName) {\r\n          let currentVal = this.state.fieldValue;\r\n          let bits = Array.from(currentVal);\r\n          //console.log(\"Changing bit \" + f.Position);\r\n          if (event.ChangeType === 'FieldSelected') {\r\n            bits[f.Position - 1] = '1';\r\n            if (f.Position > 64) {\r\n              bits[0] = '1';\r\n            }\r\n          } else if (event.ChangeType === 'FieldDeselected') {\r\n            bits[f.Position - 1] = '0';\r\n\r\n            //if all bits from 65 to 128 are off then turn bit 1 off\r\n            let turnOff = true;\r\n            for (let i = 65; i <= 128; i++) {\r\n              if (bits[i - 1] === '1') {\r\n                turnOff = false;\r\n                break;\r\n              }\r\n            }\r\n            if (turnOff) {\r\n              bits[0] = '0';\r\n            }\r\n\r\n          }\r\n          let newValue = bits.reduce((p = \"\", c) => p + c);\r\n          this.setState({fieldValue: newValue})\r\n\r\n        }\r\n      })\r\n    } else {\r\n\r\n      let obj = {fieldName: this.props.field.Name};\r\n      if (event.ChangeType === 'FieldSelected') {\r\n        //console.log(\"setting self as selected\", this.props.field.Name);\r\n        this.setState({selected: true});\r\n        obj.ChangeType = \"FieldSelected\";\r\n      } else if (event.ChangeType === 'FieldDeselected') {\r\n        this.setState({selected: false});\r\n        obj.ChangeType = \"FieldDeselected\";\r\n      } else {\r\n\r\n        //TODO:: field value has changed, it needs to be parsed and children\r\n        // have to be changed - wait for the new WASM library for ISO parsing capabilities\r\n        // on the frontend :-)\r\n\r\n      }\r\n\r\n      // for fixed and variable type field, if they have children\r\n      // the whole set of children and then let the parent know too\r\n\r\n      this.props.field.Children.forEach(c => {\r\n        if (event.ChangeType === 'FieldSelected') {\r\n          this.props.isoMsg.get(c.ID).setSelected(true);\r\n        } else if (event.ChangeType === 'FieldDeselected') {\r\n          this.props.isoMsg.get(c.ID).setSelected(false);\r\n        }\r\n      });\r\n\r\n      //pass on the message to the parent that I have changed\r\n      this.props.onFieldUpdate(obj);\r\n\r\n    }\r\n  }\r\n\r\n  setSelected(selected) {\r\n\r\n    //console.log(\"Calling apply padding \" + this.state.fieldValue)\r\n    let val = this.applyPadding(selected);\r\n    //this.setState({fieldValue: val, selected: selected});\r\n    this.props.field.Children.forEach(c => {\r\n      this.props.isoMsg.get(c.ID).setSelected(selected);\r\n    });\r\n\r\n    if (selected) {\r\n      let errors = []\r\n      if (fieldValidator.validate(this.props.field, val, errors)) {\r\n\r\n        this.setState({fieldValue: val, hasError: true, errMsg: errors[0], selected: selected});\r\n      } else {\r\n\r\n        this.setState({fieldValue: val, hasError: false, errMsg: null, selected: selected});\r\n      }\r\n    } else {\r\n      this.setState({fieldValue: val, hasError: false, errMsg: null, selected: selected});\r\n\r\n    }\r\n\r\n  }\r\n\r\n  fieldSelectionChanged(event) {\r\n\r\n    let obj = {fieldName: this.props.field.Name};\r\n    let selected = false;\r\n    if (event.target.checked) {\r\n      obj.ChangeType = \"FieldSelected\";\r\n      selected = true;\r\n    } else {\r\n      obj.ChangeType = \"FieldDeselected\";\r\n    }\r\n\r\n    if (this.props.field.Type !== AppProps.BitmappedField) {\r\n      this.setSelected(selected);\r\n    }\r\n    this.props.onFieldUpdate(obj)\r\n  }\r\n\r\n  onFocusLost() {\r\n\r\n    let val = this.applyPadding(this.state.selected)\r\n\r\n    let errors = []\r\n    if (this.state.selected) {\r\n      if (fieldValidator.validate(this.props.field, val, errors)) {\r\n        this.setState({fieldValue: val, hasError: true, errMsg: errors[0]})\r\n      } else {\r\n\r\n        this.setState({fieldValue: val, hasError: false, errMsg: null});\r\n        let obj = {\r\n          fieldName: this.props.field.Name, ChangeType: \"ValueChanged\", Value: val\r\n        };\r\n        this.props.onFieldUpdate(obj)\r\n      }\r\n    } else {\r\n      this.setState({fieldValue: val, hasError: false, errMsg: null});\r\n    }\r\n  }\r\n\r\n  //This method applied to the field if one is specified in the field definition\r\n  // selected - A boolean that represents if the field is currently selected (padding is applied only if the field is selected)\r\n  // initVal - The initial value for the field, if unspecified the current value on the state is used\r\n  applyPadding(selected, initVal = \"\") {\r\n\r\n    let val = initVal;\r\n\r\n    if (val === \"\") {\r\n      val = this.state.fieldValue;\r\n    }\r\n\r\n    if (val === undefined) {\r\n      val = \"\";\r\n    }\r\n\r\n    let field = this.state.field;\r\n    if (field.Padding === \"\" || !selected) {\r\n      return val\r\n    }\r\n\r\n    if (field.Type === 'Fixed') {\r\n\r\n      let padding = '';\r\n      switch (field.DataEncoding) {\r\n        case 'ASCII':\r\n        case 'EBCDIC': {\r\n\r\n          if (val.length < field.FixedSize) {\r\n            for (let i = 0; i < (field.FixedSize - val.length); i++) {\r\n              if (field.Padding === 'LEADING_ZEROES' || field.Padding === 'TRAILING_ZEROES') {\r\n                padding += '0';\r\n              }\r\n              if (field.Padding === 'LEADING_SPACES' || field.Padding === 'TRAILING_SPACES') {\r\n                padding += ' ';\r\n              }\r\n            }\r\n            //console.log(\"Padding required = *\" + padding + \"*\")\r\n            if (field.Padding.startsWith('LEADING')) {\r\n              val = padding + val;\r\n            } else {\r\n              val = val + padding;\r\n            }\r\n          }\r\n          break;\r\n        }//end ASCII/EBCDIC\r\n\r\n        case 'BCD': {\r\n          let padding = '';\r\n          let expectedLength = field.FixedSize * 2;\r\n          if (val.length < expectedLength) {\r\n            for (let i = 0; i < (expectedLength - val.length); i++) {\r\n              padding += '0';\r\n            }\r\n          }\r\n          if (field.Padding === 'LEADING_ZEROES') {\r\n            val = padding + val;\r\n          } else if (field.Padding === 'TRAILING_ZEROES') {\r\n            val += padding;\r\n          } else {\r\n            console.log(`Unsupported padding - ${field.Padding} for Fixed BCD field`);\r\n          }\r\n\r\n          break;\r\n        }\r\n        case 'BINARY': {\r\n\r\n          let padding = '';\r\n          let expectedLength = field.FixedSize * 2;\r\n          if (val.length < expectedLength) {\r\n            for (let i = 0; i < (expectedLength - val.length); i++) {\r\n              if (field.Padding.endsWith('ZEROES')) {\r\n                padding += '0';\r\n              } else {\r\n                padding += 'F';\r\n              }\r\n\r\n            }\r\n          }\r\n          if (field.Padding.startsWith('LEADING_')) {\r\n            val = padding + val;\r\n          } else if (field.Padding.startsWith('TRAILING_')) {\r\n            val += padding;\r\n          }\r\n\r\n          break;\r\n        }\r\n        default: {\r\n          console.log(\"Unsupported field encoding type -\" + field.DataEncoding);\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n    return val;\r\n\r\n  }\r\n\r\n  fieldValueChanged(event) {\r\n    this.setState({hasError: false, errMsg: null, fieldValue: event.target.value});\r\n\r\n  }\r\n\r\n  appendFieldContent(content, field, parentField, id2Value, level) {\r\n\r\n    let key = field.ID;\r\n    if (this.props.readOnly) {\r\n      key = 'response_seg_' + field.ID;\r\n    }\r\n    content.push(<IsoField key={key} field={field} id2Value={id2Value} isoMsg={this.props.isoMsg}\r\n                           readOnly={this.props.readOnly}\r\n                           parentField={parentField}\r\n                           level={level}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  render() {\r\n\r\n    let selectionColumnContent;\r\n\r\n    if (this.selectable) {\r\n      selectionColumnContent = <td align={\"center\"}><Checkbox type={\"checkbox\"} size={\"small\"}\r\n                                                              color={\"primary\"}\r\n                                                              checked={this.state.selected}\r\n                                                              onChange={this.fieldSelectionChanged}/>\r\n      </td>\r\n    } else {\r\n      selectionColumnContent = <td align={\"center\"}><Checkbox type={\"checkbox\"} size={\"small\"}\r\n                                                              color={\"primary\"}\r\n                                                              disabled={true}\r\n                                                              checked={this.state.selected}\r\n                                                              onChange={this.fieldSelectionChanged}/>\r\n      </td>\r\n    }\r\n    let positionInParent = \"\";\r\n    if (this.props.field.ParentId > 0) {\r\n      positionInParent = \"\\u2937\" + this.props.field.Position + \" \";\r\n    }\r\n\r\n    let fieldInfo = positionInParent + \" Type: \" + this.props.field.Type + ' / ';\r\n    if (this.props.field.Type === AppProps.FixedField) {\r\n      fieldInfo += \"Length: \" + this.props.field.FixedSize + ' / ' + 'Encoding: '\r\n          + this.props.field.DataEncoding;\r\n    } else if (this.props.field.Type === AppProps.VariableField) {\r\n      fieldInfo += \"Length Indicator: \" + this.props.field.LengthIndicatorSize + ' / '\r\n          + 'Length Encoding: ' + this.props.field.LengthEncoding + ' / ' + 'Data Encoding: '\r\n          + this.props.field.DataEncoding;\r\n    } else if (this.props.field.Type === AppProps.BitmappedField) {\r\n    }\r\n\r\n    let children = [];\r\n\r\n    this.props.field.Children.forEach(\r\n        c => this.appendFieldContent(children, c, this.props.field, this.state.id2Value,\r\n            this.props.level + 1));\r\n\r\n    let levelIndicator = \"\";\r\n    for (let i = 0; i < this.props.level; i++) {\r\n      levelIndicator += '\\u2193';\r\n    }\r\n\r\n    return (<React.Fragment>\r\n          <tr>\r\n            {/* selection column */}\r\n            {selectionColumnContent}\r\n\r\n            {/* field name column*/}\r\n\r\n            <OverlayTrigger overlay={(<Tooltip id=\"hi\"\r\n                                               style={{fontSize: '10px'}}>{fieldInfo}</Tooltip>)}\r\n                            placement=\"top\">\r\n              <td style={{\r\n                width: \"100px\", fontSize: \"12px\"\r\n              }}>\r\n                <InputLabel style={{fontSize: \"14px\"}}>{levelIndicator + ' '\r\n                + this.props.field.Name}</InputLabel>\r\n              </td>\r\n            </OverlayTrigger>\r\n\r\n            {/* field specification column */}\r\n            {/*fieldSpecColumnContent*/}\r\n\r\n            {/* field value column */}\r\n            <td>\r\n\r\n              <TextField margin={\"dense\"} size={\"small\"} variant={\"standard\"}\r\n                         value={this.state.fieldValue}\r\n                         error={this.state.hasError}\r\n                         helperText={this.state.errMsg}\r\n                         onChange={this.fieldValueChanged}\r\n                         style={{width: \"70%\"}}\r\n                         disabled={this.props.readOnly || !this.state.fieldEditable}\r\n                         key={\"fld_value_\" + this.state.field.ID}\r\n                         onBlur={this.onFocusLost}\r\n              />\r\n\r\n              <Button size={\"small\"} variant={\"contained\"} style={{\r\n                float: 'right', fontSize: '14px', marginRight: '2%', marginLeft: \"2%\"\r\n              }}\r\n                      onClick={this.toggleExpanded}> {this.state.expandBtnLabel}\r\n              </Button>\r\n\r\n            </td>\r\n\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"3\">\r\n              <FieldExtras show={this.state.showExpanded}\r\n                           field={this.state.field}\r\n                           value={this.state.fieldValue}\r\n                           readOnly={this.props.readOnly}\r\n                           isoMsg={this.props.isoMsg}\r\n                           onClose={this.setNewValue}/>\r\n            </td>\r\n          </tr>\r\n          {children}\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button} from \"react-bootstrap\";\r\nimport appProps from \"../Utils/Properties\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default class SelectMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show, selectedMsg: ''};\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.selectedMsgChanged = this.selectedMsgChanged.bind(this);\r\n  }\r\n\r\n  selectedMsgChanged(event) {\r\n    this.setState({selectedMsg: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //console.log(\"smd: componentDidUpdate\", this.state);\r\n    if (this.props.show === true && prevState.show === false) {\r\n\r\n      axios.get(appProps.loadMsgUrl, {\r\n        params: {\r\n          specId: this.props.specId,\r\n          msgId: this.props.msgId,\r\n        }\r\n      }).then(res => {\r\n        // console.log(res);\r\n        this.setState(\r\n            {\r\n              savedMsgs: res.data.saved_messages,\r\n              selectedMsg: res.data.saved_messages[0],\r\n              show: true\r\n            });\r\n\r\n      }).catch(e => {\r\n            //FIXME\r\n            console.log(e);\r\n            this.setState({show: true, errorMessage: e.response.data});\r\n          }\r\n      )\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n    this.setState({show: false});\r\n    this.props.closeLoadMsgDialog(this.state.selectedMsg);\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.setState({show: false});\r\n    //TODO:: also tell the parent that we're done\r\n    //and return the value of the selected saved msg\r\n    this.props.closeLoadMsgDialog(null);\r\n  }\r\n\r\n  render() {\r\n\r\n    let content;\r\n\r\n    if (this.state.show) {\r\n      if (this.state.errorMessage) {\r\n        content = <div>{this.state.errorMessage}</div>\r\n      } else {\r\n        content =\r\n            <React.Fragment>\r\n\r\n              <TextField type={\"text\"} key={\"msg_name_save\"}\r\n                         margin={\"dense\"}\r\n                         fullWidth={true} select={true}\r\n                         variant={\"outlined\"} label={\"Saved Message\"}\r\n                         value={this.state.selectedMsg}\r\n                         onChange={this.selectedMsgChanged}>\r\n\r\n\r\n                {this.state.savedMsgs.map((sm) => {\r\n                  return <MenuItem key={sm} value={sm}>{sm}</MenuItem>\r\n                })\r\n                }\r\n              </TextField>\r\n            </React.Fragment>;\r\n      }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n          <Dialog open={this.state.show} onClose={this.closeDialogFail}\r\n                  aria-labelledby=\"form-dialog-title\" fullWidth={true}\r\n                  maxWidth={\"sm\"}>\r\n            <DialogTitle id=\"form-dialog-title\" onClose={this.closeDialogFail}>Select\r\n              Message</DialogTitle>\r\n            <DialogContent>\r\n              <div>\r\n                <Grid container={true} spacing={2}>\r\n\r\n                  <Grid container>\r\n                    <Grid item lg={12} xl={12}>\r\n                      {content}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.closeDialogSuccess} color=\"primary\">\r\n                OK\r\n              </Button>\r\n              <Button onClick={this.closeDialogFail} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n\r\n\r\n        /*<Modal show={this.state.show}\r\n               onHide={this.closeDialogFail}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Load Saved Message</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.closeDialogSuccess}>\r\n              OK\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={this.closeDialogFail}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>*/\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport IsoField from \"./IsoField/IsoField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\n\r\n// ResponseSegment displays the response to an ISO message\r\nexport default class ResponseSegment extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: props.show, data: this.props.data, msgTemplate: this.props.msgTemplate\r\n    }\r\n    this.hideResponseSegment = this.hideResponseSegment.bind(this);\r\n    this.copyToClipboard = this.copyToClipboard.bind(this);\r\n\r\n    this.textAreaRef = React.createRef();\r\n  }\r\n\r\n  appendFieldContent(content, field, idToField, level) {\r\n    content.push(<IsoField key={'response_seg_' + field.ID} field={field}\r\n                           id2Value={idToField}\r\n                           readOnly={true} level={level}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n    return \"\"\r\n  }\r\n\r\n  hideResponseSegment() {\r\n    this.setState({show: false});\r\n    this.props.onClose();\r\n  }\r\n\r\n  collectData(field, idToValue, content) {\r\n    if (idToValue.get(field.ID)) {\r\n      let val = idToValue.get(field.ID);\r\n      content.push(`${field.Name}: ${val}`);\r\n    }\r\n    if (field.Children.length > 0) {\r\n      field.Children.forEach(cf => {\r\n        this.collectData(cf, idToValue, content)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (prevProps.show === false && this.props.show === true) {\r\n      this.setState({\r\n        show: true, data: this.props.data, msgTemplate: this.props.msgTemplate\r\n      })\r\n    }\r\n  }\r\n\r\n  copyToClipboard() {\r\n    this.textAreaRef.current.select();\r\n    if (!document.execCommand('copy')) {\r\n      alert('Failed to copy to clipboard!')\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let content = [];\r\n    let forClipboard = [];\r\n    if (this.state.show) {\r\n\r\n      let idToField = new Map();\r\n      this.state.data.forEach(f => {\r\n        idToField.set(f.ID, f.Value);\r\n      });\r\n\r\n      this.state.msgTemplate.fields.forEach(field => {\r\n        this.collectData(field, idToField, forClipboard)\r\n      });\r\n      let clipboardText = \"ISO Response  \\n|---------------|\\n\" + forClipboard.reduce(\r\n          (p, c, currentIndex) => {\r\n            if (currentIndex === 1) {\r\n              return p + \"\\n\" + c + \"\\n\";\r\n            } else {\r\n              return p + c + \"\\n\";\r\n            }\r\n          })\r\n\r\n      clipboardText = \"ISO Request  \\n|---------------|\\n\" + this.props.reqData + \"\\n\\n\"\r\n          + clipboardText + \"\\n\\n\";\r\n\r\n      this.state.msgTemplate.fields.forEach(field => {\r\n        this.appendFieldContent(content, field, idToField, 0)\r\n      });\r\n\r\n      //console.log(content);\r\n\r\n      return (<React.Fragment>\r\n\r\n\r\n        {this.state.show ? <Dialog open={this.state.show}\r\n                                   onClose={this.hideResponseSegment} scroll={\"paper\"}\r\n                                   PaperComponent={PaperComponent}\r\n                                   aria-labelledby=\"draggable-dialog-title\"\r\n                                   maxWidth={\"sm\"} fullWidth={true}\r\n                                   disableBackdropClick={true}>\r\n          <DialogTitle style={{cursor: 'move'}}\r\n                       id=\"draggable-dialog-title\">{this.props.dialogTitle}</DialogTitle>\r\n          <DialogContent dividers={true}>\r\n\r\n            <Paper>\r\n          <textarea ref={this.textAreaRef}\r\n                    style={{\r\n                      opacity: \"0.01\", position: \"absolute\", zIndex: -9999, height: 0\r\n                    }} value={clipboardText}/>\r\n\r\n\r\n              <table border=\"0\" align={\"center\"}>\r\n                <thead>\r\n                <tr style={{\r\n                  fontFamily: \"lato-regular\",\r\n                  backgroundColor: \"#eed143\",\r\n                  fontSize: \"15px\",\r\n                  align: \"center\",\r\n                  borderBottom: 'solid',\r\n                  borderColor: 'blue'\r\n                }}>\r\n                  <td colSpan=\"3\"\r\n                      align={\"center\"}>{\"Response Segment\"}</td>\r\n                </tr>\r\n                <tr style={{\r\n                  fontFamily: \"lato-regular\", backgroundColor: \"#3effba\", fontSize: \"14px\",\r\n                }}>\r\n                  <td align={\"center\"}>Selection</td>\r\n                  <td align={\"center\"} style={{width: \"35%\"}}>Field</td>\r\n                  <td align={\"center\"} style={{width: \"50%\"}}>Field Data\r\n                  </td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {content}\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.copyToClipboard} size=\"small\"\r\n                    color=\"primary\"\r\n                    variant={\"contained\"}>\r\n              Copy To Clipboard\r\n            </Button>\r\n            <Button onClick={this.hideResponseSegment} size=\"small\"\r\n                    color=\"primary\"\r\n                    variant={\"contained\"}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog> : null}\r\n      </React.Fragment>);\r\n\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (<Draggable handle=\"#draggable-dialog-title\"\r\n                     cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n    <Paper {...props} />\r\n  </Draggable>);\r\n}","import React from 'react'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nexport default class ParseMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show, traceMsg: '', errorMessage: null};\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.traceChanged = this.traceChanged.bind(this);\r\n    this.isValidTrace = this.isValidTrace.bind(this);\r\n  }\r\n\r\n  isValidTrace(trace) {\r\n    return !!(trace.trim() !== \"\" && (trace.length\r\n        % 2 === 0 && trace.match(\"^[0-9,a-f,A-F]+$\")));\r\n\r\n  }\r\n\r\n  traceChanged(event) {\r\n\r\n    let updatedTrace = event.target.value;\r\n\r\n    if (!this.isValidTrace(updatedTrace)) {\r\n      this.setState({\r\n        traceMsg: updatedTrace,\r\n        errorMessage: \"Input is not valid hex\"\r\n      });\r\n    } else {\r\n      this.setState({traceMsg: updatedTrace, errorMessage: null});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (this.props.show === true && prevState.show === false) {\r\n      this.setState({show: true, traceMsg: ''});\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n    if (this.isValidTrace(this.state.traceMsg)) {\r\n      this.setState({show: false})\r\n      this.props.setTrace(this.state.traceMsg);\r\n    }\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.setState({show: false});\r\n    this.props.setTrace(null);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n        <div>\r\n          <Dialog open={this.state.show} onClose={this.closeDialogFail}\r\n                  aria-labelledby=\"form-dialog-title\" fullWidth={true}\r\n                  maxWidth={\"md\"}>\r\n            <DialogTitle id=\"form-dialog-title\" onClose={this.closeDialogFail}>Parse\r\n              Trace</DialogTitle>\r\n            <DialogContent>\r\n              <div>\r\n                <Grid container={true} spacing={2}>\r\n\r\n                  <Grid container>\r\n                    <Grid item lg={12} xl={12}>\r\n                      <TextField key={\"trace_input\"} variant={\"outlined\"}\r\n                                 label={\"Hex Trace\"} margin={\"dense\"}\r\n                                 fullWidth={true} value={this.state.traceMsg}\r\n                                 error={this.state.errorMessage !== null}\r\n                                 onChange={this.traceChanged} rows={10}\r\n                                 helperText={this.state.errorMessage}\r\n                                 multiline={true}/>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.closeDialogSuccess} color=\"primary\">\r\n                OK\r\n              </Button>\r\n              <Button onClick={this.closeDialogFail} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button} from \"react-bootstrap\";\r\nimport appProps from \"../Utils/Properties\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nexport default class SaveMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: props.show,\r\n      msgName: props.initialMessage,\r\n      \"updateIfExists\": false\r\n    };\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.msgNameChanged = this.msgNameChanged.bind(this);\r\n    this.updateIfExistsChanged = this.updateIfExistsChanged.bind(this);\r\n  }\r\n\r\n  msgNameChanged(event) {\r\n    this.setState({errorMessage: '', msgName: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.show === true && prevState.show === false) {\r\n\r\n      this.setState(\r\n          {show: true, msgName: this.props.msgName});\r\n\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n\r\n    if (!this.state.msgName || this.state.msgName === \"\" || !this.props.data) {\r\n      this.setState({errorMessage: 'Please specify a message!'});\r\n      return;\r\n    }\r\n\r\n    let postData = 'specId=' + this.props.specId + '&msgId=' + this.props.msgId\r\n        + '&dsName=' + this.state.msgName + '&updateMsg='\r\n        + this.state.updateIfExists + '&msg=' + JSON.stringify(\r\n            this.props.data);\r\n\r\n    axios.post(appProps.saveMsgUrl, postData).then(res => {\r\n      console.log(res);\r\n      this.props.msgSaveSuccess(this.state.msgName, this.state.updateIfExists);\r\n      this.setState({show: false});\r\n\r\n    }).catch(e => {\r\n          this.props.msgSaveFailed(e);\r\n          this.setState({show: false});\r\n        }\r\n    );\r\n\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.props.msgSaveCancelled();\r\n    this.setState({show: false});\r\n  }\r\n\r\n  updateIfExistsChanged(event) {\r\n    this.setState({updateIfExists: event.target.checked});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <Dialog open={this.state.show} onClose={this.closeDialogFail}\r\n                  aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"sm\"}>\r\n            <DialogTitle id=\"form-dialog-title\" onClose={this.closeDialogFail}>Save Message</DialogTitle>\r\n            <DialogContent>\r\n              <div>\r\n                <Grid container={true} spacing={2}>\r\n\r\n                  <Grid container>\r\n                    <Grid item lg={12} xl={12}>\r\n                      <TextField type={\"text\"} key={\"msg_name_save\"} margin={\"dense\"}\r\n                                 fullWidth={true}\r\n                                 variant={\"outlined\"} label={\"Message Name\"}\r\n                                 value={this.state.msgName}\r\n                                 onChange={this.msgNameChanged}/>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container>\r\n                    <Grid item xs={4}>\r\n                      <FormControlLabel\r\n                          control={<Checkbox key={\"key_update_if_exists\"}\r\n                                             size={\"sm\"}\r\n                                             checked={this.state.updateIfExists}\r\n                                             onChange={this.updateIfExistsChanged}/>}\r\n                          label={\"Overwrite\"}/>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.closeDialogSuccess} color=\"primary\">\r\n                OK\r\n              </Button>\r\n              <Button onClick={this.closeDialogFail} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// NetworkSettings is a component that manages the ip, port and MLI type\r\n// used when sending a message\r\nclass NetworkSettings extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      targetServerIp: props.serverIP, targetServerPort: props.port, mliType: props.mliType\r\n    }\r\n\r\n    this.serverIpChanged = this.serverIpChanged.bind(this);\r\n    this.serverPortChanged = this.serverPortChanged.bind(this);\r\n    this.mliTypeChanged = this.mliTypeChanged.bind(this);\r\n\r\n  }\r\n\r\n  mliTypeChanged(e) {\r\n    this.setStateAndPushUp({mliType: e.target.value});\r\n    this.props.onChange(this.state.targetServerIp, this.state.targetServerPort, e.target.value)\r\n  }\r\n\r\n  serverIpChanged(e) {\r\n    this.setState({targetServerIp: e.target.value});\r\n    this.props.onChange(e.target.value, this.state.targetServerPort, this.state.mliType)\r\n  }\r\n\r\n  serverPortChanged(e) {\r\n    this.setState({targetServerPort: e.target.value});\r\n    this.props.onChange(this.state.targetServerIp, e.target.value, this.state.mliType)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <Box border={1} borderColor={\"#1228B6\"} borderRadius={8}\r\n             style={{backgroundColor: \"#E5E4E3\", marginBottom: \"1%\"}}>\r\n          <div style={{\r\n            textAlign: \"left\",\r\n            verticalAlign: \"baseline\",\r\n            marginBottom: \"2%\",\r\n            marginTop: \"2%\",\r\n            width: \"100%\"\r\n          }}>\r\n            <Grid container={true} spacing={3} justify={\"space-around\"}>\r\n\r\n              <Grid item={true} lg={6}>\r\n                <TextField id=\"ns_ip\" label=\"Host IP/Name\" size={\"small\"} fullWidth={true}\r\n                           variant=\"outlined\"\r\n                           value={this.state.targetServerIp}\r\n                           onChange={this.serverIpChanged}/>\r\n              </Grid>\r\n\r\n              <Grid item={true} lg={4}>\r\n                <TextField id=\"ns_port\" label=\"Port\" size={\"small\"} fullWidth={true}\r\n                           variant=\"outlined\" value={this.state.targetServerPort}\r\n                           onChange={this.serverPortChanged}/>\r\n              </Grid>\r\n              <Grid item={true} log={4}>\r\n                <TextField select size={\"small\"} fullWidth={true}\r\n                           value={this.state.mliType} variant={\"outlined\"} label={\"MLI\"}\r\n                           onChange={this.mliTypeChanged}>\r\n                  <MenuItem value={\"2i\"}>2I</MenuItem>\r\n                  <MenuItem value={\"2e\"}>2E</MenuItem>\r\n                  <MenuItem value={\"4i\"}>4I</MenuItem>\r\n                  <MenuItem value={\"4e\"}>4E</MenuItem>\r\n                </TextField>\r\n\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n          </div>\r\n        </Box>);\r\n  }\r\n}\r\n\r\nexport default NetworkSettings","import * as React from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\"\r\nimport appProps from \"./Properties\";\r\n\r\nexport default class MsgHistPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    console.log(\"New MsgHist\")\r\n    this.state = {maxItems: props.initialMaxItems, logData: props.initialLogData}\r\n\r\n    this.maxItemsChanged = this.maxItemsChanged.bind(this);\r\n    this.fetchLogs = this.fetchLogs.bind(this);\r\n\r\n  }\r\n\r\n  maxItemsChanged(event) {\r\n    this.setState({maxItems: event.target.value})\r\n  }\r\n\r\n  fetchLogs() {\r\n\r\n    axios.get(appProps.logHistUrl\r\n        + `?spec_id=${this.props.specId}&msg_id=${this.props.msgId}&count=${this.state.maxItems}`).then(\r\n        res => {\r\n          console.log(res.data)\r\n          let displayData = \"\"\r\n          res.data.forEach(e => {\r\n            displayData += e + \"\\n-----------------------------\\n\";\r\n          });\r\n\r\n          this.setState({logData: displayData})\r\n          this.props.saveState({maxItems: this.state.maxItems, logData: this.state.logData})\r\n\r\n        }).catch(e => {\r\n      console.log(e)\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (<div style={{textAlign: \"left\", marginTop: \"5%\"}}>\r\n\r\n      <Grid container={true} spacing={5} alignItems={\"center\"}>\r\n        <Grid item={true} lg={4}>\r\n          <TextField key={\"isim-hist-max-items\"} variant={\"outlined\"} margin={\"dense\"}\r\n                     label={\"Last 'X' Messages\"}\r\n                     fullWidth={true}\r\n                     value={this.state.maxItems} select={true}\r\n                     onChange={this.maxItemsChanged}>\r\n            <MenuItem value={5}>5</MenuItem>\r\n            <MenuItem value={10}>10</MenuItem>\r\n            <MenuItem value={25}>25</MenuItem>\r\n            <MenuItem value={50}>50</MenuItem>\r\n\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item={true} lg={4}>\r\n          <Button variant={\"contained\"} color={\"primary\"} size={\"small\"}\r\n                  onClick={this.fetchLogs}>Fetch</Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{width: \"80%\"}}>\r\n        <TextField key={\"isim-hist-logs\"} margin={\"dense\"}\r\n                   label={\"Messages\"}\r\n                   fullWidth={true} multiline={true} rowsMax={100} contentEditable={false}\r\n                   value={this.state.logData}/>\r\n      </div>\r\n\r\n    </div>);\r\n  }\r\n\r\n}","import * as React from \"react\";\r\nimport PinGenBox from \"./PinGenBox\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MacGenBox from \"./MacGenBox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nexport default class CryptoUtilsBox extends React.Component {\r\n  pinField = {\r\n    PinGenProps: {\r\n      PANFieldId: 0,\r\n      PANExtractParams: \"\",\r\n      PINFormat: \"ISO0\",\r\n      PINClear: \"1234\",\r\n      PINKey: \"1234567890abcd0102030546febce4ee\"\r\n    }, GenType: \"pin_gen\"\r\n  };\r\n\r\n  macField = {\r\n    MacGenProps: {\r\n      MacAlgo: \"ANSIX9_19\", MacKey: \"1234567890abcd0102030546febce4ee\"\r\n    }, GenType: \"mac_gen\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {pinBlock: \"\", mac: \"\", macData: \"\", error: \"\"}\r\n\r\n    this.setPinValue = this.setPinValue.bind(this);\r\n    this.setMacValue = this.setMacValue.bind(this);\r\n    this.macDataChanged = this.macDataChanged.bind(this);\r\n  }\r\n\r\n  setPinValue(value) {\r\n    this.setState({pinBlock: value})\r\n  }\r\n\r\n  setMacValue(value) {\r\n    this.setState({mac: value})\r\n  }\r\n\r\n  macDataChanged(event) {\r\n    if (event.target.value.trim().length === 0 || event.target.value.trim().length % 2 !== 0) {\r\n      this.setState({error: \"MacData should be hex/even-digits\", macData: event.target.value});\r\n      return\r\n    }\r\n\r\n    this.setState({error: \"\", macData: event.target.value.trim()})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div style={{\r\n          textAlign: \"left\", marginTop: \"5%\"\r\n        }}>\r\n\r\n          <Grid container={true} spacing={1} direction={\"column\"}>\r\n\r\n            <Grid item={true} sm={6} justify={\"center\"}>\r\n\r\n              <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                  <Typography>PIN Generator</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n\r\n                  <div style={{\r\n                    textAlign: \"left\", marginTop: \"5%\", width: \"100%\", height: \"100%\"\r\n                  }}>\r\n\r\n                    <PinGenBox field={this.pinField} setPinBlock={this.setPinValue}/>\r\n                    <TextField size={\"small\"} label={\"PIN Block\"} variant={\"outlined\"}\r\n                               margin={\"dense\"}\r\n                               fullWidth={true}\r\n                               value={this.state.pinBlock}/>\r\n                  </div>\r\n\r\n\r\n                </ExpansionPanelDetails>\r\n              </ExpansionPanel>\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid item={true} sm={6}>\r\n\r\n\r\n              <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                  <Typography>MAC Generator</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n\r\n                  <div style={{\r\n                    textAlign: \"left\", marginTop: \"5%\", width: \"100%\"\r\n                  }}>\r\n\r\n                    <TextField size={\"small\"} label={\"Mac Data\"} variant={\"outlined\"}\r\n                               margin={\"dense\"}\r\n                               fullWidth={true} multiline={true} onChange={this.macDataChanged}\r\n                               rows={5}\r\n                               rowsMax={20} error={this.state.error !== \"\"}\r\n                               helperText={this.state.error}\r\n                               value={this.state.macData}/>\r\n                    <MacGenBox field={this.macField} setMac={this.setMacValue}\r\n                               macData={this.state.macData}/>\r\n                    <TextField size={\"small\"} label={\"MAC\"} variant={\"outlined\"} margin={\"dense\"}\r\n                               fullWidth={true}\r\n                               value={this.state.mac}/>\r\n                  </div>\r\n\r\n\r\n                </ExpansionPanelDetails>\r\n              </ExpansionPanel>\r\n\r\n\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n        </div>);\r\n  }\r\n\r\n}","import React from 'react';\r\nimport axios from \"axios\";\r\nimport IsoField from './IsoField/IsoField.js'\r\nimport SelectMessageDialog from '../Dialogs/SelectMessageDialog.js'\r\nimport {Button} from \"@material-ui/core\";\r\nimport appProps from '../Utils/Properties.js'\r\nimport ResponseSegment from \"./ResponseSegment\";\r\nimport ParseMessageDialog from \"../Dialogs/ParseMessageDialog\";\r\nimport SaveMessageDialog from \"../Dialogs/SaveMessageDialog\";\r\n\r\nimport 'typeface-roboto';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NetworkSettings from \"../Utils/NetworkSettings\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\nimport MsgHistPanel from \"../Utils/MsgHistPanel.js\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport CryptoUtilsBox from \"../Utils/CryptoUtils\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport MsgUtils from \"../Utils/MsgUtils\";\r\n\r\n// MessageStructure is the central component that encompasses the Request and\r\n// the response segments along with NetworkSettings etc\r\nexport default class MessageStructure extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(this.props);\r\n    //console.log(\"$msg_structure$\", this.props.specs, this.props.spec, this.props.msg);\r\n\r\n    this.state = {\r\n      msgTemplate: null,\r\n      loaded: false,\r\n      spec: props.spec,\r\n      msg: props.msg,\r\n      shouldShow: props.showMsgTemplate,\r\n      targetServerIp: '127.0.0.1',\r\n      targetServerPort: '6666',\r\n      mliType: \"2i\",\r\n      currentDataSet: '',\r\n      errDialogVisible: false,\r\n      errorMessage: '',\r\n      showLoadMessagesDialog: false,\r\n      showTraceInputDialog: false,\r\n      showSaveMsgDialog: false,\r\n      showResponse: false,\r\n      responseData: null,\r\n      reqMenuVisible: false,\r\n      selectedReqMenuItem: null,\r\n      reqClipboardData: null,\r\n      selectedTab: 0,\r\n      msgHist: {maxItems: 5, logData: ''}\r\n    };\r\n\r\n    this.onFieldUpdate = this.onFieldUpdate.bind(this);\r\n    this.appendFieldContent = this.appendFieldContent.bind(this);\r\n    this.sendToHost = this.sendToHost.bind(this);\r\n    //this.addFieldContent = this.addFieldContent.bind(this);\r\n    this.showErrorDialog = this.showErrorDialog.bind(this);\r\n    this.closeErrorDialog = this.closeErrorDialog.bind(this);\r\n    this.processError = this.processError.bind(this);\r\n    this.showLoadMessagesDialog = this.showLoadMessagesDialog.bind(this);\r\n    this.closeLoadMsgDialog = this.closeLoadMsgDialog.bind(this);\r\n    this.showUnImplementedError = this.showUnImplementedError.bind(this);\r\n    this.setTrace = this.setTrace.bind(this);\r\n    this.showTraceInputsDialog = this.showTraceInputsDialog.bind(this);\r\n    this.showSaveMsgDialog = this.showSaveMsgDialog.bind(this);\r\n\r\n    this.msgSaveSuccess = this.msgSaveSuccess.bind(this);\r\n    this.msgSaveFailed = this.msgSaveFailed.bind(this);\r\n    this.msgSaveCancelled = this.msgSaveCancelled.bind(this);\r\n    this.showInfoDialog = this.showInfoDialog.bind(this);\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.hideMenu = this.hideMenu.bind(this);\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n    this.showResponseDialog = this.showResponseDialog.bind(this);\r\n    this.getTemplateLabel = this.getTemplateLabel.bind(this);\r\n    this.networkSettingsChanged = this.networkSettingsChanged.bind(this);\r\n    this.hideResponse = this.hideResponse.bind(this);\r\n    this.tabChanged = this.tabChanged.bind(this);\r\n    this.saveHistState = this.saveHistState.bind(this);\r\n\r\n    this.setStateAndPushUp = this.setStateAndPushUp.bind(this);\r\n\r\n  }\r\n\r\n  //some day let's use Redux\r\n  setStateAndPushUp(stateObj) {\r\n\r\n    this.setState(stateObj)\r\n\r\n  }\r\n\r\n  saveHistState(histState) {\r\n    console.log(\"Received \", histState)\r\n    this.setStateAndPushUp({msgHist: histState})\r\n\r\n  }\r\n\r\n  tabChanged(event, newValue) {\r\n    this.setStateAndPushUp({selectedTab: newValue})\r\n  }\r\n\r\n  networkSettingsChanged(ip, port, mliType) {\r\n    this.setStateAndPushUp({targetServerIp: ip, targetServerPort: port, mliType: mliType})\r\n  }\r\n\r\n  showMenu(event) {\r\n\r\n    this.setStateAndPushUp({\r\n      selectedReqMenuItem: event.currentTarget, reqMenuVisible: true\r\n    })\r\n\r\n  }\r\n\r\n  hideMenu() {\r\n    this.setStateAndPushUp({reqMenuVisible: false})\r\n    this.setStateAndPushUp({selectedReqMenuItem: null})\r\n  }\r\n\r\n  showResponseDialog() {\r\n    this.hideMenu()\r\n    this.setStateAndPushUp({showResponse: true})\r\n  }\r\n\r\n  hideResponse() {\r\n    this.setStateAndPushUp({showResponse: false})\r\n\r\n  }\r\n\r\n  handleMenuClick(event) {\r\n    alert(event.currentTarget)\r\n\r\n    this.setStateAndPushUp({selectedReqMenuItem: event.currentTarget})\r\n    this.hideMenu()\r\n  }\r\n\r\n  // Receives the trace as a callback from ParseMessageDialog component\r\n  setTrace(trace) {\r\n    if (trace != null) {\r\n      //console.log(\"trace  = \", trace);\r\n      // now parse this via a API call\r\n\r\n      axios.post(appProps.parseTraceUrl + '/' + this.state.spec.ID + '/' + this.state.msg.ID, trace)\r\n      .then(res => {\r\n        console.log(\"parsed msg data\", res.data);\r\n        res.data.parsed_fields.forEach(fd => {\r\n          let fieldComponent = this.state.isoMsg.get(fd.ID);\r\n          fieldComponent.setState({selected: true, fieldValue: fd.Value});\r\n        });\r\n      }).catch(e => {\r\n\r\n        console.log(\"error\", e);\r\n        this.processError(e)\r\n      })\r\n\r\n    }\r\n    this.setStateAndPushUp({showTraceInputDialog: false})\r\n  }\r\n\r\n  showUnImplementedError() {\r\n    this.setStateAndPushUp({\r\n      errorMessage: 'This functionality has not been implemented. Please try the old version of application.',\r\n      errDialogVisible: true\r\n    })\r\n  }\r\n\r\n  closeLoadMsgDialog(selectedMsg) {\r\n    this.setStateAndPushUp({showLoadMessagesDialog: false, currentDataSet: selectedMsg});\r\n\r\n    if (selectedMsg != null) {\r\n      axios.get(appProps.loadMsgUrl, {\r\n        params: {\r\n          specId: this.state.spec.ID, msgId: this.state.msg.ID, dsName: selectedMsg\r\n        }\r\n      }).then(res => {\r\n        console.log(\"saved msg = \", res.data.saved_message);\r\n        res.data.saved_message.forEach(fd => {\r\n          let fieldComponent = this.state.isoMsg.get(fd.ID);\r\n          fieldComponent.setState({selected: true, fieldValue: fd.Value});\r\n        });\r\n      }).catch(e => {\r\n        console.log(e);\r\n        this.processError(e)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  showInfoDialog(msg) {\r\n    this.setStateAndPushUp({errDialogVisible: true, errorMessage: msg})\r\n  }\r\n\r\n  msgSaveSuccess(msgName, updated) {\r\n    let type = \"saved\";\r\n    if (updated) {\r\n      type = \"updated\"\r\n    }\r\n    this.showInfoDialog(`Message ${msgName} ${type} successfully.`);\r\n    this.setStateAndPushUp({showSaveMsgDialog: false});\r\n  }\r\n\r\n  msgSaveFailed(e) {\r\n    this.processError(e);\r\n    this.setStateAndPushUp({showSaveMsgDialog: false});\r\n  }\r\n\r\n  msgSaveCancelled() {\r\n    this.setStateAndPushUp({showSaveMsgDialog: false});\r\n  }\r\n\r\n  showSaveMsgDialog() {\r\n\r\n    // build the data and then\r\n    let content = [];\r\n    let validationErrors = [];\r\n    MsgUtils.getMsgContent(this.state.isoMsg, content, validationErrors)\r\n    this.setStateAndPushUp({saveData: content, showSaveMsgDialog: true})\r\n  }\r\n\r\n  showTraceInputsDialog() {\r\n    this.hideMenu()\r\n    this.setStateAndPushUp({showTraceInputDialog: true})\r\n\r\n  }\r\n\r\n  showLoadMessagesDialog() {\r\n    this.hideMenu()\r\n    this.setStateAndPushUp({showLoadMessagesDialog: true})\r\n\r\n  }\r\n\r\n  closeErrorDialog() {\r\n    this.setStateAndPushUp({errDialogVisible: false})\r\n  }\r\n\r\n  showErrorDialog() {\r\n    this.setStateAndPushUp({errDialogVisible: true});\r\n  }\r\n\r\n  //sends the message (as JSON) to the API server to be sent to the ISO host\r\n  sendToHost() {\r\n\r\n    this.hideMenu()\r\n\r\n    let content = [];\r\n    let validationErrors = [];\r\n\r\n    MsgUtils.getMsgContent(this.state.isoMsg, content, validationErrors)\r\n\r\n    if (validationErrors.length > 0) {\r\n      let errMsg = \"\";\r\n      validationErrors.forEach(e => errMsg += e + \"\\n\");\r\n      this.setStateAndPushUp({errorMessage: errMsg});\r\n      this.showErrorDialog();\r\n      return\r\n    }\r\n\r\n    console.log(content)\r\n    let reqClipboardData = content.reduce((p, c, currentIndex) => {\r\n\r\n      if (currentIndex === 1) {\r\n        return p.Name + \":\" + p.Value + \"\\n\" + c.Name + \":\" + c.Value + \"\\n\";\r\n      }\r\n      return p + c.Name + ':' + c.Value + \"\\n\";\r\n\r\n    });\r\n\r\n    //alert(reqClipboardData)\r\n\r\n    //lets not hide and then show the response segment again\r\n    this.setStateAndPushUp({\r\n      showResponse: false, responseData: null, reqClipboardData: reqClipboardData\r\n    });\r\n\r\n    let postData = 'host=' + this.state.targetServerIp + \"&port=\" + this.state.targetServerPort\r\n        + '&mli=' + this.state.mliType + '&specId=' + this.state.spec.ID + '&msgId='\r\n        + this.state.msg.ID + \"&msg=\" + JSON.stringify(content);\r\n    //console.log(postData)\r\n    axios.post(appProps.sendMsgUrl, postData).then(res => {\r\n      console.log(\"Response from server\", res.data.response_fields);\r\n      this.setStateAndPushUp({showResponse: true, responseData: res.data.response_fields});\r\n\r\n    }).catch(e => {\r\n      console.log(\"error = \", e);\r\n      this.processError(e)\r\n    })\r\n\r\n  }\r\n\r\n  processError(e) {\r\n\r\n    if (!e.response) {\r\n      console.log(\"Error = \", e);\r\n      this.setStateAndPushUp({\r\n        errorMessage: 'Error: Unable to reach API server', errDialogVisible: true\r\n      });\r\n      return\r\n    }\r\n\r\n    console.log(e.response)\r\n\r\n    if (e.response.status === 400) {\r\n      this.setStateAndPushUp({errorMessage: e.response.data.error, errDialogVisible: true});\r\n    } else {\r\n      this.setStateAndPushUp({\r\n        errorMessage: 'Unexpected error from server - ' + e.response.status, errDialogVisible: true\r\n      });\r\n    }\r\n  }\r\n\r\n  getTemplateLabel() {\r\n    //alert(this.state.spec + \"// \" + this.state.msg)\r\n    return this.state.spec.Name + \" // \" + this.state.msg.Name;\r\n  }\r\n\r\n  onFieldUpdate(e) {\r\n    //console.log(\"field updated =>\" + e.fieldName)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMessageTemplate(this.props.spec, this.props.msg)\r\n  }\r\n\r\n  // Reads and sets up the msgTemplate in state.isoMsg\r\n  getMessageTemplate(pSpec, pMsg) {\r\n    let spec = this.props.specs.find(s => {\r\n      if (s.Name === pSpec) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n    let msg = spec.Messages.find(m => {\r\n      if (m.Name === pMsg) {\r\n        return m;\r\n      }\r\n\r\n      return null;\r\n    });\r\n\r\n    let url = appProps.templateUrl + '/' + spec.ID + \"/\" + msg.ID;\r\n    console.log(url);\r\n    axios.get(url).then(res => {\r\n\r\n      let isoMsg = new Map();\r\n      isoMsg.set(\"msg_template\", res.data);\r\n      isoMsg.set(\"spec_id\", spec.ID);\r\n      isoMsg.set(\"msg_id\", msg.ID);\r\n\r\n      this.setStateAndPushUp({\r\n        spec: spec, msg: msg, msgTemplate: res.data, loaded: true, isoMsg: isoMsg\r\n      });\r\n\r\n      console.log(\"MsgTemplate = \", this.state.msgTemplate);\r\n    }).catch(err => {\r\n      console.log(err)\r\n      this.setStateAndPushUp({errorMessage: err, errDialogVisible: true})\r\n    });\r\n  }\r\n\r\n  appendFieldContent(content, field, isoMsg, level) {\r\n    content.push(<IsoField key={field.ID} field={field} isoMsg={isoMsg}\r\n                           level={level}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  render() {\r\n\r\n    let content = [];\r\n    if (this.state.loaded === true) {\r\n      this.state.msgTemplate.fields.forEach(field => {\r\n        this.appendFieldContent(content, field, this.state.isoMsg, 0)\r\n      })\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n          <AlertDialog show={this.state.errDialogVisible}\r\n                       msg={this.state.errorMessage}\r\n                       onClose={this.closeErrorDialog}/>\r\n\r\n\r\n          <SelectMessageDialog show={this.state.showLoadMessagesDialog}\r\n                               specId={this.state.spec.ID}\r\n                               msgId={this.state.msg.ID}\r\n                               closeLoadMsgDialog={this.closeLoadMsgDialog}/>\r\n\r\n          <ParseMessageDialog show={this.state.showTraceInputDialog}\r\n                              setTrace={this.setTrace}/>\r\n\r\n          <SaveMessageDialog show={this.state.showSaveMsgDialog}\r\n                             msgId={this.state.msg.ID}\r\n                             initialMessage={this.state.currentDataSet}\r\n                             specId={this.state.spec.ID}\r\n                             data={this.state.saveData}\r\n                             msgName={this.state.currentDataSet}\r\n                             msgSaveSuccess={this.msgSaveSuccess}\r\n                             msgSaveFailed={this.msgSaveFailed}\r\n                             msgSaveCancelled={this.msgSaveCancelled}/>\r\n\r\n\r\n          <AppBar position=\"static\" variant={\"elevation\"} style={{width: \"80%\", float: \"left\"}}>\r\n            <Tabs value={this.state.selectedTab} onChange={this.tabChanged} aria-label=\"IsoSim Tabs\"\r\n                  centered={true}>\r\n              <Tab label=\"Messaging\"/>\r\n              <Tab label=\"History\"/>\r\n              <Tab label=\"Utilities\"/>\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel value={this.state.selectedTab} index={0}>\r\n\r\n            <div style={{\r\n              display: \"inline-block\", width: \"50%\", fill: 'aqua', float: \"left\", marginTop: \"20px\"\r\n            }}>\r\n\r\n              <div>\r\n\r\n                <NetworkSettings onChange={this.networkSettingsChanged}\r\n                                 serverIP={this.state.targetServerIp}\r\n                                 port={this.state.targetServerPort} mliType={this.state.mliType}/>\r\n\r\n                <ButtonGroup size={\"small\"} color={\"primary\"} fullWidth={true}\r\n                             variant={\"contained\"}>\r\n                  <Button\r\n                      onClick={this.showTraceInputsDialog}>Parse</Button>\r\n                  <Button\r\n                      onClick={this.showLoadMessagesDialog}>Load</Button>\r\n                  <Button\r\n                      onClick={this.showSaveMsgDialog}>Save</Button>\r\n                  <Button onClick={this.sendToHost}>Send</Button>\r\n                  <Button onClick={this.showResponseDialog}\r\n                          disabled={this.state.responseData == null}>Show\r\n                    Response</Button>\r\n                </ButtonGroup>\r\n\r\n              </div>\r\n\r\n              {/*TODO:: pull this into a separate component*/}\r\n              <Paper variation={\"outlined\"} style={{verticalAlign: \"middle\"}}>\r\n                <table border=\"0\" align={\"center\"}\r\n                       style={{align: \"center\", marginTop: \"10px\", width: \"80%\"}}>\r\n                  <thead>\r\n                  <tr style={{\r\n                    fontFamily: \"lato-regular\",\r\n                    backgroundColor: \"#ff8f5b\",\r\n                    fontSize: \"15px\",\r\n                    borderBottom: 'solid',\r\n                    borderColor: 'blue'\r\n                  }}>\r\n                    <td colSpan=\"3\" align={\"center\"}>\r\n\r\n                      <div\r\n                          style={{display: \"inline-block\"}}>{this.getTemplateLabel()}</div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{\r\n                    fontFamily: \"lato-regular\", backgroundColor: \"#ff8f5b\", fontSize: \"14px\",\r\n                  }}>\r\n                    <td align={\"center\"}>Selection</td>\r\n                    <td align={\"center\"} style={{width: '35%'}}> Field</td>\r\n                    <td align={\"center\"} style={{width: '70%'}}>Field Data\r\n                    </td>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {content}\r\n                  </tbody>\r\n                </table>\r\n              </Paper>\r\n\r\n              {/*<div style={{float: \"right\"}}>*/}\r\n              <ResponseSegment show={this.state.showResponse}\r\n                               reqData={this.state.reqClipboardData}\r\n                               onClose={this.hideResponse}\r\n                               data={this.state.responseData}\r\n                               dialogTitle={\"Response - [\" + this.getTemplateLabel() + \"]\"}\r\n                               msgTemplate={this.state.msgTemplate}/>\r\n\r\n            </div>\r\n\r\n\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={1}>\r\n            <div style={{alignItems: \"left\", width: \"100%\"}}>\r\n              <MsgHistPanel specId={this.state.spec.ID} msgId={this.state.msg.ID}\r\n                            initialMaxItems={this.state.msgHist.maxItems}\r\n                            initialLogData={this.state.msgHist.logData}\r\n                            saveState={this.saveHistState}/>\r\n\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={2}>\r\n\r\n            <div style={{width: \"100%\"}}>\r\n              <CryptoUtilsBox/>\r\n            </div>\r\n          </TabPanel>\r\n\r\n\r\n        </React.Fragment>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n//copied right out from the Material UI demos :-)\r\n\r\nfunction TabPanel(props) {\r\n  const {children, value, index, ...other} = props;\r\n\r\n  return (<div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n  >\r\n    {value === index && (<Box>\r\n      {children}\r\n    </Box>)}\r\n  </div>);\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node, index: PropTypes.any.isRequired, value: PropTypes.any.isRequired,\r\n};\r\n\r\n","import {withStyles} from \"@material-ui/styles\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\n//import * as React from \"react\";\r\n\r\n/*const useStyles = theme => {\r\n\r\n  return ({\r\n    selected: {\r\n      \"&:focus\": {\r\n        backgroundColor: \"red\"\r\n      }\r\n    }\r\n  });\r\n}*/\r\n\r\n/*\r\nclass StyledTreeItem extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {classes}=this.props;\r\n\r\n    return(\r\n        <TreeItem classes={classes.selected} ...props/>);\r\n  }\r\n\r\n}\r\n*/\r\n\r\n/*\r\nconst StyledTreeItem = withStyles(({\r\n  selected: {\r\n    \"&:focus\": {\r\n      textDecoration: \"underline\"\r\n    }\r\n  }\r\n}))(TreeItem);\r\nexport default StyledTreeItem*/\r\n\r\n//copied from here - https://material-ui.com/components/tree-view/\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.text.secondary, '&:hover > $content': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    }, '&:focus > $content, &$selected > $content': {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: 'var(--tree-view-color)',\r\n    }, '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  }, content: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '$expanded > &': {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  }, group: {\r\n    marginLeft: 10, '& $content': {\r\n      paddingLeft: theme.spacing(3),\r\n    },\r\n  }, expanded: {}, selected: {}, label: {\r\n    fontWeight: 'inherit', color: 'inherit',\r\n  }, labelRoot: {\r\n    display: 'flex', alignItems: 'center', padding: theme.spacing(0.8, 0),\r\n  }, labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  }, labelText: {\r\n    fontWeight: 'inherit', flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function StyledTreeItem(props) {\r\n  const classes = useTreeItemStyles();\r\n  const {labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, ...other} = props;\r\n\r\n  return (<TreeItem\r\n          label={<div className={classes.labelRoot}>\r\n            <LabelIcon color=\"inherit\" className={classes.labelIcon}/>\r\n            <Typography variant=\"body2\" className={classes.labelText}>\r\n              {labelText}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"inherit\">\r\n              {labelInfo}\r\n            </Typography>\r\n          </div>}\r\n          style={{\r\n            '--tree-view-color': color, '--tree-view-bg-color': bgColor,\r\n          }}\r\n          classes={{\r\n            root: classes.root,\r\n            content: classes.content,\r\n            expanded: classes.expanded,\r\n            selected: classes.selected,\r\n            group: classes.group,\r\n            label: classes.label,\r\n          }}\r\n          {...other}\r\n      />);\r\n}\r\n\r\nStyledTreeItem.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelIcon: PropTypes.elementType.isRequired,\r\n  labelInfo: PropTypes.string,\r\n  labelText: PropTypes.string.isRequired,\r\n};","import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport appProps from \"../../Utils/Properties\";\r\nimport {Folder, Home, Message} from \"@material-ui/icons\"\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\n\r\n\r\n// SpecTree displays a tree of all the available specifications and the messages\r\n// defined under the spec\r\nclass SpecTree extends React.Component {\r\n\r\n  treeInstance;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      specs: [], loaded: false, errDialogVisible: false, errorMessage: ''\r\n    };\r\n    //this.messageClicked = this.messageClicked.bind(this);\r\n    this.nodeSelected = this.nodeSelected.bind(this);\r\n  }\r\n\r\n  nodeSelected(event, selectedNode) {\r\n    // console.log(\"selected node - \", selectedNode)\r\n\r\n    let matches = selectedNode.match(\"nodeId_([0-9]+)_([0-9]+)\");\r\n    if (matches) {\r\n      console.log(\"matched\", this.treeInstance);\r\n      this.props.msgSelected(matches[1], matches[2]);\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n    messageClicked(event, selectedNode) {\r\n\r\n      // FIXME:: This is a hack! There needs to be a better way like onSelect\r\n      let specId = event.target.parentElement.parentElement.getAttribute(\"sid\");\r\n      let msgId = event.target.parentElement.parentElement.getAttribute(\"mid\");\r\n\r\n      this.props.msgSelected(specId, msgId);\r\n\r\n    }\r\n  */\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(appProps.allSpecsUrl).then(res => {\r\n      console.log(\"allSpecs\", res.data);\r\n      this.setState({specs: res.data.specs, loaded: true});\r\n      let timerId = setInterval(function () {\r\n        alert('Select one of the spec and message in the tree to get started!')\r\n        clearInterval(timerId)\r\n      }, 2)\r\n\r\n    }).catch(err => console.log(err))\r\n  }\r\n\r\n  buildMessages(spec) {\r\n    let content = []\r\n\r\n\r\n    spec.Messages.forEach(m => {\r\n      content.push(<StyledTreeItem nodeId={\"nodeId_\" + spec.ID + \"_\" + m.ID}\r\n                             sid={spec.ID} mid={m.ID}\r\n                             label={m.Name}\r\n      />)\r\n    });\r\n    return content\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.loaded === true) {\r\n\r\n      let content = [];\r\n      this.state.specs.forEach(s => {\r\n\r\n        content.push(<StyledTreeItem align=\"left\" nodeId={\"nodeId_\" + s.ID}\r\n                               icon={<Folder color={\"primary\"}/>}\r\n                               label={s.Name}>{this.buildMessages(s)}</StyledTreeItem>);\r\n\r\n      });\r\n\r\n      let treeContent = <StyledTreeItem nodeId={\"nodeId_0\"}\r\n                                  icon={<Home color={\"primary\"}/>}\r\n                                  label={\"ISO8583 Specifications\"}>{content}</StyledTreeItem>;\r\n\r\n      this.treeInstance = <TreeView\r\n          onNodeSelect={this.nodeSelected}\r\n          defaultExpanded={['nodeId_0']}\r\n          defaultCollapseIcon={<ExpandMoreIcon/>}\r\n          defaultExpandIcon={<ChevronRightIcon/>}\r\n          defaultParentIcon={<Folder color={\"primary\"}/>}\r\n          defaultEndIcon={<Message color=\"primary\"/>}\r\n      >\r\n        {treeContent}\r\n      </TreeView>;\r\n      return (<React.Fragment>\r\n        {this.treeInstance}\r\n\r\n      </React.Fragment>);\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SpecTree","import React from 'react';\r\nimport axios from 'axios'\r\nimport MessageStructure from '../Iso/MessageStructure.js'\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport appProps from \"../Utils/Properties\";\r\nimport SpecTree from \"./SpecTree/SpecTree\";\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      specs: [],\r\n      currentSpec: \"Select\",\r\n      currentSpecMsg: \"\",\r\n      showMsgTemplate: false,\r\n      loaded: false,\r\n      errDialogVisible: false,\r\n      errorMessage: ''\r\n    };\r\n    this.specChanged = this.specChanged.bind(this);\r\n    this.messageChanged = this.messageChanged.bind(this);\r\n    this.msgSelected = this.msgSelected.bind(this);\r\n    this.getSpecByID = this.getSpecByID.bind(this);\r\n\r\n    this.msgTemplateRef = React.createRef();\r\n\r\n  }\r\n\r\n  msgSelected(specId, msgId) {\r\n\r\n    console.log(specId, msgId)\r\n    console.log(this.state.specs)\r\n    let spec = this.getSpecByID(parseInt(specId))\r\n    console.log(\"spec = \", spec)\r\n    let msg = null;\r\n    spec.Messages.forEach(m => {\r\n      if (m.ID === parseInt(msgId)) {\r\n        msg = m;\r\n      }\r\n    })\r\n\r\n    this.setState({loaded: true, currentSpec: spec.Name, currentSpecMsg: msg.Name});\r\n\r\n  }\r\n\r\n  closeErrorDialog() {\r\n    this.setState({errDialogVisible: false})\r\n  }\r\n\r\n  showErrorDialog() {\r\n    this.setState({errDialogVisible: true});\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(appProps.allSpecsUrl).then(res => {\r\n      console.log(res.data);\r\n      this.setState({specs: res.data.specs, loaded: true});\r\n    }).catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n\r\n    let msg;\r\n    let spec;\r\n\r\n    if (this.state.loaded === true) {\r\n      spec = this.getCurrentSpec();\r\n      if (spec == null) {\r\n        spec = this.state.specs[0];\r\n      }\r\n\r\n      if (!this.state.currentSpecMsg) {\r\n        msg = spec.Messages[0].Name;\r\n      } else {\r\n        msg = this.state.currentSpecMsg;\r\n      }\r\n    }\r\n\r\n    return (<React.Fragment>\r\n\r\n\r\n          <div>\r\n            <Modal show={this.state.errDialogVisible}\r\n                   onHide={this.closeErrorDialog}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Error</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{this.state.errorMessage}</Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.closeErrorDialog}>\r\n                  Close\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            <div style={{\r\n              float: \"left\",\r\n              display: \"inline-block\",\r\n              marginRight: \"20px\",\r\n              marginLeft: \"20px\",\r\n              backgroundColor: '#fbfff0'\r\n\r\n            }}>\r\n              <SpecTree msgSelected={this.msgSelected}/>\r\n            </div>\r\n            <div align=\"center\" style={{backgroundColor: '#fbfff0', float: \"right\", width: \"80%\"}}>\r\n              {this.state.loaded && this.state.currentSpec !== \"Select\" ? <MessageStructure\r\n                  key={this.state.currentSpec + \"_\" + msg}\r\n                  ref={this.msgTemplateRef}\r\n                  specs={this.state.specs}\r\n                  spec={this.state.currentSpec}\r\n                  msg={this.state.currentSpecMsg}/> : null}\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\n  specChanged(event) {\r\n\r\n    this.setState({\r\n      currentSpec: event.target.value, currentSpecMsg: \"\"\r\n    });\r\n\r\n    console.log(event.target.value);\r\n    if (this.state.loaded && event.target.value !== \"Select\") {\r\n      console.log(\"calling update - specChanged\");\r\n    }\r\n  }\r\n\r\n  messageChanged(event) {\r\n    this.setState({currentSpecMsg: event.target.value});\r\n\r\n    if (this.state.loaded && this.state.currentSpec !== \"Select\") {\r\n      console.log(\"calling update - msgChanged\");\r\n\r\n    }\r\n  }\r\n\r\n  // builds a combo box for specifications\r\n  specsDropDown() {\r\n    return (<select style={{fontFamily: \"lato-regular\", width: \"200px\",}}\r\n                    onChange={this.specChanged}>\r\n      <option key={\"Select\"} value={\"Select\"}>Select</option>\r\n      {this.state.specs.map((s) => {\r\n        return <option key={s.Name} value={s.Name}>{s.Name}</option>\r\n      })}\r\n\r\n    </select>);\r\n  }\r\n\r\n  // builds and returns a combo box for messages for the current spec\r\n  messagesDropDown() {\r\n\r\n    let spec;\r\n\r\n    if (this.state.loaded) {\r\n      spec = this.getCurrentSpec();\r\n    }\r\n\r\n    // no spec loaded\r\n    if (this.state.currentSpec === \"Select\") {\r\n      return (<select/>);\r\n    } else {\r\n\r\n      return (\r\n\r\n          <select value={this.state.currentSpecMsg}\r\n                  style={{fontFamily: \"lato-regular\", width: \"150px\"}}\r\n                  onChange={this.messageChanged}>\r\n            {spec.Messages.map(msg => {\r\n              return <option key={msg.ID}\r\n                             value={msg.Name}>{msg.Name}</option>\r\n            })}\r\n\r\n          </select>\r\n\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // returns the currently loaded spec (if there is one) else null\r\n  getCurrentSpec() {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.Name === this.state.currentSpec) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  // returns specification given its name\r\n  getSpecByName(name) {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.Name === name) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  // returns specification given its name\r\n  getSpecByID(specId) {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.ID === specId) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/Navigation/NavBar.js'\r\n\r\nfunction App() {\r\n  return (\r\n      <div style={{backgroundColor: '#fbfff0'}}>\r\n        <h1 style={{fontFamily: \"shadows-into-light\"}}>ISO WebSim - ISO8583 Web\r\n          Simulator</h1>\r\n        <a style={{fontFamily: 'lato-regular', fontSize: '12px'}}\r\n           href={\"/iso/v0/server\"} target={\"_blank\"}\r\n           rel={\"noopener noreferrer\"}>[Manage Servers]</a>\r\n\r\n        <div className=\"App\">\r\n          <NavBar/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//ReactDOM.render(<NavBar />, document.getElementById('nav_bar'));\r\nReactDOM.render(<App style={{backgroundColor:'#fbfff0'}}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}