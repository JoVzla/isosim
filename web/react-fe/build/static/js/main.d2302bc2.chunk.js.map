{"version":3,"sources":["components/Utils/Properties.js","components/Dialogs/AlertDialog.js","components/Utils/PinGenBox.js","components/Utils/FieldValidator.js","components/Utils/MsgUtils.js","components/Utils/MacGenBox.js","components/Utils/FieldExtras.js","components/Iso/IsoField/IsoField.js","components/Dialogs/SelectMessageDialog.js","components/Iso/ResponseSegment.js","components/Dialogs/ParseMessageDialog.js","components/Dialogs/SaveMessageDialog.js","components/Utils/NetworkSettings.js","components/Iso/MessageStructure.js","components/Navigation/SpecTree/SpecTree.js","components/Navigation/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["AppProps","this","baseUrl","sendMsgUrl","loadMsgUrl","allSpecsUrl","templateUrl","parseTraceUrl","saveMsgUrl","pinGenUrl","macGenUrl","FixedField","VariableField","BitmappedField","appProps","AlertDialog","props","state","show","handleClose","bind","setState","onClose","prevProps","prevState","snapshot","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","msg","DialogActions","Button","onClick","color","React","Component","PinGenBox","from","to","panID","field","initialPan","pinGenProps","PinGenProps","PANFieldID","PANExtractParams","match","split","originalPan","panField","isoMsg","get","fieldValue","substring","GenType","pinFormat","PINFormat","pan","clearPin","PINClear","pinKey","PINKey","hasError","errorMsg","generatePinBlock","panValueChanged","formatChanged","keyValueChanged","pinValueChanged","doNothing","tmp","length","pinError","keyError","panError","data","PAN","axios","post","JSON","stringify","then","res","setPinBlock","PinBlock","catch","err","error","console","log","event","target","value","Fragment","Box","border","borderColor","borderRadius","style","paddingBottom","padding","Grid","container","spacing","alignItems","item","xs","TextField","size","label","onChange","variant","margin","fullWidth","select","MenuItem","justify","float","fieldValidator","validate","fieldData","errors","validationFailed","Type","DataEncoding","FixedSize","push","Name","dataErr","fieldLen","MinSize","MaxSize","MsgUtils","content","validationErrors","isoField","ID","selected","setError","Value","Children","forEach","cf","addFieldContent","fields","f","MacGenBox","macAlgo","MacGenProps","MacAlgo","macKey","MacKey","generateMac","algoChanged","getMsgContent","errMsg","e","spec_id","msg_id","parsed_fields","setMac","Mac","response","status","FieldExtras","closeThis","valueChanged","setValue","val","dynamicGenerators","width","height","paddingTop","rows","multiline","disabled","readOnly","IsoField","fieldValueChanged","fieldSelectionChanged","onFieldUpdate","appendFieldContent","setSelected","setNewValue","showExpanded","closeExpanded","getBgColor","toggleExpanded","onFocusLost","applyPadding","selectable","id2Value","fieldEditable","bgColor","expandBtnLabel","defaultFieldValue","includes","Array","fill","reduce","p","c","set","newValue","fieldName","currentVal","bits","ChangeType","Position","turnOff","i","obj","checked","initVal","undefined","Padding","startsWith","expectedLength","endsWith","parentField","level","key","selectionColumnContent","align","Checkbox","type","positionInParent","ParentId","fieldInfo","LengthIndicatorSize","LengthEncoding","children","levelIndicator","OverlayTrigger","overlay","Tooltip","fontSize","placement","InputLabel","helperText","onBlur","marginRight","marginLeft","colSpan","SelectMessageDialog","selectedMsg","closeDialogSuccess","closeDialogFail","selectedMsgChanged","params","specId","msgId","savedMsgs","saved_messages","errorMessage","closeLoadMsgDialog","map","sm","maxWidth","lg","xl","ResponseSegment","msgTemplate","hideResponseSegment","copyToClipboard","textAreaRef","createRef","idToField","idToValue","collectData","current","document","execCommand","alert","forClipboard","Map","clipboardText","currentIndex","reqData","scroll","PaperComponent","disableBackdropClick","cursor","dialogTitle","dividers","Paper","ref","opacity","position","zIndex","fontFamily","backgroundColor","borderBottom","handle","cancel","ParseMessageDialog","traceMsg","traceChanged","isValidTrace","trace","trim","updatedTrace","setTrace","SaveMessageDialog","msgName","initialMessage","msgNameChanged","updateIfExistsChanged","postData","updateIfExists","msgSaveSuccess","msgSaveFailed","msgSaveCancelled","FormControlLabel","control","NetworkSettings","targetServerIp","targetServerPort","mliType","serverIpChanged","serverPortChanged","mliTypeChanged","verticalAlign","defaultValue","MessageStructure","loaded","spec","shouldShow","showMsgTemplate","currentDataSet","errDialogVisible","showLoadMessagesDialog","showTraceInputDialog","showSaveMsgDialog","showResponse","responseData","reqMenuVisible","selectedReqMenuItem","reqClipboardData","sendToHost","showErrorDialog","closeErrorDialog","processError","showUnImplementedError","showTraceInputsDialog","showInfoDialog","showMenu","hideMenu","handleMenuClick","showResponseDialog","getTemplateLabel","networkSettingsChanged","hideResponse","ip","port","currentTarget","fd","dsName","saved_message","updated","saveData","response_fields","getMessageTemplate","pSpec","pMsg","specs","find","s","Messages","m","url","display","ButtonGroup","variation","marginTop","SpecTree","messageClicked","parentElement","getAttribute","msgSelected","timerId","setInterval","clearInterval","TreeItem","nodeId","sid","mid","icon","Folder","buildMessages","treeContent","Home","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","Message","NavBar","currentSpec","currentSpecMsg","specChanged","messageChanged","getSpecByID","msgTemplateRef","parseInt","getCurrentSpec","Modal","onHide","Header","closeButton","Title","Body","Footer","name","App","href","rel","className","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d2302bc2.chunk.js","sourcesContent":["// AppProps are various URL's that are used by axios\r\nexport class AppProps {\r\n\r\n  static FixedField = \"Fixed\";\r\n  static VariableField = \"Variable\";\r\n  static BitmappedField = \"Bitmapped\";\r\n\r\n  constructor() {\r\n    //this.baseUrl = 'http://localhost:8080';\r\n    this.baseUrl = '';\r\n    this.sendMsgUrl = this.baseUrl + '/iso/v1/send';\r\n    this.loadMsgUrl = this.baseUrl + '/iso/v1/loadmsg';\r\n    this.allSpecsUrl = this.baseUrl + '/iso/v1/specs';\r\n    this.templateUrl = this.baseUrl + '/iso/v1/template';\r\n    this.parseTraceUrl = this.baseUrl + '/iso/v1/parse';\r\n    this.saveMsgUrl = this.baseUrl + '/iso/v1/save';\r\n    this.pinGenUrl = this.baseUrl + '/iso/v1/crypto/pin_gen';\r\n    this.macGenUrl = this.baseUrl + '/iso/v1/crypto/mac_gen';\r\n  }\r\n\r\n}\r\n\r\nlet appProps = new AppProps();\r\nexport default appProps;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class AlertDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show};\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({show: false})\r\n    this.props.onClose();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    \r\n    if (this.props.show === true && prevState.show === false) {\r\n      this.setState({show: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<Dialog\r\n        open={this.state.show}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle\r\n          id=\"alert-dialog-title\">{\"Error\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {this.props.msg}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={this.handleClose} color=\"primary\">\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>);\r\n\r\n  }\r\n}","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport axios from \"axios\";\r\nimport appProps from \"./Properties\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\n\r\nexport default class PinGenBox extends React.Component {\r\n\r\n  field;\r\n  from = 0;\r\n  to = 0;\r\n  panID = 0;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.field = this.props.field;\r\n\r\n    let initialPan = \"\";\r\n    let pinGenProps = this.field.PinGenProps;\r\n\r\n    if (this.field.PinGenProps.PANFieldID !== 0) {\r\n      this.panID = this.field.PinGenProps.PANFieldID;\r\n    }\r\n\r\n    if (pinGenProps.PANFieldID !== 0 && pinGenProps.PANExtractParams !== \"\"\r\n        && pinGenProps.PANExtractParams.match(\"[0-9]+:[0-9]+\")) {\r\n\r\n      [this.from, this.to] = pinGenProps.PANExtractParams.split(\":\");\r\n\r\n    }\r\n\r\n    let originalPan = \"\";\r\n    let panField = this.props.isoMsg.get(this.panID);\r\n    if (panField) {\r\n      originalPan = panField.state.fieldValue;\r\n      initialPan = originalPan;\r\n\r\n      if (this.from >= 0 && this.to > this.from) {\r\n        initialPan = panField.state.fieldValue.substring(this.from, this.to);\r\n      }\r\n    }\r\n\r\n    if (this.field.GenType === 'pin_gen') {\r\n      this.state = {\r\n        pinFormat: this.field.PinGenProps.PINFormat,\r\n        pan: initialPan,\r\n        originalPan: originalPan,\r\n        clearPin: this.field.PinGenProps.PINClear,\r\n        pinKey: this.field.PinGenProps.PINKey,\r\n        hasError: false,\r\n        errorMsg: null\r\n      }\r\n    } else {\r\n      this.state = {pinFormat: \"ISO0\", pan: initialPan, clearPin: \"\", pinKey: \"\"}\r\n    }\r\n\r\n    this.generatePinBlock = this.generatePinBlock.bind(this);\r\n    this.panValueChanged = this.panValueChanged.bind(this);\r\n    this.formatChanged = this.formatChanged.bind(this);\r\n    this.keyValueChanged = this.keyValueChanged.bind(this);\r\n    this.pinValueChanged = this.pinValueChanged.bind(this);\r\n    this.doNothing = this.doNothing.bind(this);\r\n\r\n  }\r\n\r\n  doNothing() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    let tmp = this.props.isoMsg.get(this.panID);\r\n    if (tmp) {\r\n\r\n      if (this.state.originalPan !== tmp.state.fieldValue) {\r\n\r\n        // if the pan has changed, record it\r\n        let originalPan = tmp.state.fieldValue;\r\n        let pan = \"\";\r\n        if (this.from >= 0 && this.to > this.from) {\r\n          pan = tmp.state.fieldValue.substring(this.from, this.to);\r\n        } else {\r\n          pan = tmp.state.fieldValue\r\n        }\r\n\r\n        this.setState({pan: pan, originalPan: originalPan})\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  generatePinBlock() {\r\n\r\n    if (this.state.pan === \"\") {\r\n      this.setState({panError: true})\r\n      return;\r\n    }\r\n\r\n    if (this.state.clearPin === \"\" || this.state.clearPin.length < 4 || this.state.clearPin.length\r\n        > 12) {\r\n      this.setState({pinError: true})\r\n      return;\r\n    }\r\n\r\n    if (this.state.pinKey === \"\" || (this.state.pinKey.length !== 16 && this.state.pinKey.length\r\n        !== 32)) {\r\n      this.setState({keyError: true})\r\n      return\r\n    }\r\n\r\n    this.setState({keyError: false, pinError: false, panError: false});\r\n\r\n    let data = {\r\n      PINClear: this.state.clearPin,\r\n      PINFormat: this.state.pinFormat,\r\n      PINKey: this.state.pinKey,\r\n      PAN: this.state.pan\r\n    };\r\n\r\n    //console.log(JSON.stringify(data))\r\n    axios.post(appProps.pinGenUrl, JSON.stringify(data)).then(res => {\r\n      this.props.setPinBlock(res.data.PinBlock);\r\n    }).catch(err => {\r\n      let errorMsg = \"Failed to generate PIN block: \";\r\n      if (err.error) {\r\n        errorMsg = errorMsg + err.error\r\n      } else {\r\n        errorMsg = errorMsg + err;\r\n      }\r\n\r\n      this.setState({hasError: true, errorMsg: errorMsg});\r\n      console.log(\"error= \", err);\r\n    })\r\n\r\n  }\r\n\r\n  formatChanged(event) {\r\n    this.setState({pinFormat: event.target.value});\r\n  }\r\n\r\n  pinValueChanged(event) {\r\n    this.setState({clearPin: event.target.value});\r\n  }\r\n\r\n  panValueChanged(event) {\r\n    this.setState({pan: event.target.value});\r\n  }\r\n\r\n  keyValueChanged(event) {\r\n    this.setState({pinKey: event.target.value});\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.field.GenType !== 'pin_gen') {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n          <AlertDialog show={this.state.hasError} msg={this.state.errorMsg}\r\n                       onClose={this.doNothing}/>\r\n\r\n          <Box border={1} borderColor={\"primary.main\"} borderRadius={4}>\r\n            <div style={{paddingBottom: \"10px\", padding: \"5px\"}}>\r\n              <Grid container spacing={0}>\r\n\r\n                <Grid container spacing={1} alignItems={\"flex-start\"}>\r\n                  <Grid item xs={3}>\r\n                    <TextField size={\"small\"} label={\"Clear PIN\"} value={this.state.clearPin}\r\n                               onChange={this.pinValueChanged} error={this.state.pinError}\r\n                               variant={\"outlined\"} margin={\"dense\"}/>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField label={\"PIN Key\"} value={this.state.pinKey} variant={\"outlined\"}\r\n                               onChange={this.keyValueChanged} error={this.state.keyError}\r\n                               margin={\"dense\"} fullWidth={true}/>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField size={\"small\"} value={this.state.pinFormat} select={true}\r\n                               fullWidth={true}\r\n                               label={\"Format\"} onChange={this.formatChanged}\r\n                               variant={\"outlined\"} margin={\"dense\"}>\r\n                      <MenuItem value={\"ISO0\"}>ISO-0</MenuItem>\r\n                      <MenuItem value={\"ISO1\"}>ISO-1</MenuItem>\r\n                      <MenuItem value={\"ISO3\"}>ISO-3</MenuItem>\r\n                      <MenuItem value={\"IBM3264\"}>IBM-3264</MenuItem>\r\n                    </TextField>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} alignItems={\"flex-start\"}>\r\n                  <Grid item xs={12}>\r\n                    <TextField label={\"PAN\"} value={this.state.pan} variant={\"outlined\"}\r\n                               onChange={this.panValueChanged} error={this.state.panError}\r\n                               margin={\"dense\"}/>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={0} justify={\"flex-end\"} alignItems={\"flex-end\"}>\r\n                  <Grid item xs>\r\n                    <div style={{float: \"right\"}}>\r\n                      <Button size={\"small\"} variant={\"contained\"} onClick={this.generatePinBlock}\r\n                              color={\"primary\"}>Generate</Button>\r\n                    </div>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n          </Box>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n}","\r\n// FieldValidator provides validation logic for field values\r\nimport {AppProps} from \"./Properties\";\r\n\r\nclass FieldValidator {\r\n\r\n  constructor(props) {\r\n    this.validate = this.validate.bind(this);\r\n  }\r\n\r\n  validate(field, fieldData, errors) {\r\n\r\n    //console.log(\"validate\", field, fieldData, errors);\r\n    let validationFailed = false;\r\n\r\n    if (field.Type === AppProps.FixedField) {\r\n\r\n      if (field.DataEncoding === 'ASCII' || field.DataEncoding === 'EBCDIC') {\r\n        if (fieldData.length !== field.FixedSize) {\r\n          errors.push(\r\n              `\\u2b55 \"${field.Name}\" should have a fixed size of ${field.FixedSize} but has ${fieldData.length}`);\r\n          validationFailed = true;\r\n        }\r\n      } else {\r\n        if (fieldData.length !== 2 * field.FixedSize) {\r\n          errors.push(\r\n              `\\u2b55 \"${field.Name}\" should have a fixed size of ${field.FixedSize} but has ${fieldData.length\r\n              / 2}`);\r\n          validationFailed = true;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    let dataErr = false;\r\n\r\n    if (field.DataEncoding === 'BCD' || field.DataEncoding === 'BINARY') {\r\n      if (fieldData.length % 2 !== 0) {\r\n        errors.push(\r\n            `\\u2b55 \"${field.Name}\" should have even number of characters!`);\r\n        validationFailed = true;\r\n        dataErr = true;\r\n      }\r\n\r\n      if (field.DataEncoding === 'BINARY' && !fieldData.match(\r\n          \"^[0-9,a-f,A-F]+$\")) {\r\n        errors.push(`\\u2b55 \"${field.Name}\" supports only hex i.e 0-9,a-z,A-Z`);\r\n        validationFailed = true;\r\n      }\r\n      if (field.DataEncoding === 'BCD' && !fieldData.match(\"^[0-9]+$\")) {\r\n        errors.push(`\\u2b55 \"${field.Name}\" supports only bcd i.e 0-9`);\r\n        validationFailed = true;\r\n      }\r\n    }\r\n\r\n    if (!dataErr && field.Type === AppProps.VariableField) {\r\n\r\n      let fieldLen = fieldData.length;\r\n      if (field.DataEncoding === 'BCD' || field.DataEncoding === 'BINARY') {\r\n        fieldLen = fieldData.length / 2;\r\n      }\r\n\r\n      if (field.MinSize > 0 && fieldData.length < field.MinSize) {\r\n        errors.push(\r\n            `\\u2b55 \"${field.Name} size of ${fieldLen} is less than required min of ${field.MinSize}\" `);\r\n        validationFailed = true;\r\n      }\r\n      if (field.MaxSize > 0 && fieldData.length > field.MaxSize) {\r\n        errors.push(\r\n            `\\u2b55 \"${field.Name} size  of ${fieldLen} is greater than required max of ${field.MaxSize}\" `);\r\n        validationFailed = true;\r\n      }\r\n    }\r\n\r\n    //TODO:: other checks like content etc\r\n    return validationFailed;\r\n\r\n  }\r\n\r\n}\r\n\r\nlet fieldValidator = new FieldValidator();\r\nexport default fieldValidator;","import fieldValidator from \"./FieldValidator\";\r\n\r\nexport default class MsgUtils {\r\n\r\n  static addFieldContent(field, content, isoMsg, validationErrors) {\r\n\r\n    let isoField = isoMsg.get(field.ID);\r\n\r\n    if (isoField.state.selected) {\r\n      if (fieldValidator.validate(field, isoField.state.fieldValue, validationErrors)) {\r\n        isoField.setError(true);\r\n      } else {\r\n        isoField.setError(false);\r\n      }\r\n      content.push({ID: field.ID, Name: field.Name, Value: isoField.state.fieldValue});\r\n    }\r\n\r\n    field.Children.forEach(cf => {\r\n      if (isoField.state.selected) {\r\n        MsgUtils.addFieldContent(cf, content, isoMsg, validationErrors);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  static getMsgContent(isoMsg, content, validationErrors) {\r\n    isoMsg.get(\"msg_template\").fields.forEach(f => {\r\n      MsgUtils.addFieldContent(f, content, isoMsg, validationErrors);\r\n    });\r\n\r\n  };\r\n\r\n}\r\n\r\n\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport axios from \"axios\";\r\nimport appProps from \"./Properties\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\nimport MsgUtils from \"./MsgUtils.js\";\r\n\r\nexport default class MacGenBox extends React.Component {\r\n\r\n  field;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.field = this.props.field;\r\n\r\n    this.state = {\r\n      macAlgo: this.field.MacGenProps.MacAlgo,\r\n      macKey: this.field.MacGenProps.MacKey,\r\n      hasError: false,\r\n      errorMsg: null\r\n    }\r\n\r\n    this.generateMac = this.generateMac.bind(this);\r\n    this.algoChanged = this.algoChanged.bind(this);\r\n    this.keyValueChanged = this.keyValueChanged.bind(this);\r\n    this.doNothing = this.doNothing.bind(this);\r\n\r\n  }\r\n\r\n  doNothing() {\r\n    this.setState({hasError: false, errorMsg: null});\r\n  }\r\n\r\n  generateMac() {\r\n\r\n    if (this.state.macKey === \"\" || (this.state.macKey.length !== 16 && this.state.macKey.length\r\n        !== 32)) {\r\n      this.setState({keyError: true})\r\n      return\r\n    }\r\n\r\n    this.setState({keyError: false, pinError: false, panError: false});\r\n\r\n    let content = []\r\n    let validationErrors = []\r\n\r\n    MsgUtils.getMsgContent(this.props.isoMsg, content, validationErrors);\r\n\r\n    if (validationErrors.length > 0) {\r\n      let errMsg = \"\";\r\n      validationErrors.forEach(e => errMsg += e + \"\\n\");\r\n      this.setState({hasError: true, errorMsg: errMsg});\r\n      return\r\n    }\r\n\r\n    let data = {\r\n      MacAlgo: this.state.macAlgo,\r\n      MacKey: this.state.macKey,\r\n      spec_id: this.props.isoMsg.get(\"spec_id\"),\r\n      msg_id: this.props.isoMsg.get(\"msg_id\"),\r\n      parsed_fields: content\r\n    };\r\n\r\n    axios.post(appProps.macGenUrl, JSON.stringify(data)).then(res => {\r\n      this.setState({hasError: false, errorMsg: null});\r\n      this.props.setMac(res.data.Mac);\r\n\r\n    }).catch(e => {\r\n      let errorMsg = \"Failed to generate MAC: \";\r\n      if (e.error) {\r\n        if (e.response.status === 400) {\r\n          errorMsg = errorMsg + e.response.data.error;\r\n        }\r\n\r\n      } else {\r\n        errorMsg = errorMsg + e;\r\n      }\r\n\r\n      this.setState({hasError: true, errorMsg: errorMsg});\r\n      console.log(\"error= \", e);\r\n    })\r\n\r\n  }\r\n\r\n  algoChanged(event) {\r\n    this.setState({macAlgo: event.target.value});\r\n  }\r\n\r\n  keyValueChanged(event) {\r\n    this.setState({macKey: event.target.value});\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.field.GenType !== 'mac_gen') {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n          <AlertDialog show={this.state.hasError} msg={this.state.errorMsg}\r\n                       onClose={this.doNothing}/>\r\n\r\n          <Box border={1} borderColor={\"primary.main\"} borderRadius={4}>\r\n            <div style={{paddingBottom: \"10px\", padding: \"5px\"}}>\r\n              <Grid container spacing={0}>\r\n\r\n                <Grid container spacing={1} alignItems={\"flex-start\"}>\r\n                  <Grid item xs={6}>\r\n                    <TextField label={\"MAC Key\"} value={this.state.macKey} variant={\"outlined\"}\r\n                               onChange={this.keyValueChanged} error={this.state.keyError}\r\n                               margin={\"dense\"} fullWidth={true}/>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField size={\"small\"} value={this.state.macAlgo} select={true}\r\n                               fullWidth={true}\r\n                               label={\"MAC Algorithm\"} onChange={this.algoChanged}\r\n                               variant={\"outlined\"} margin={\"dense\"}>\r\n                      <MenuItem value={\"ANSIX9_19\"}>ANSIX9_19</MenuItem>\r\n                    </TextField>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={0} justify={\"flex-end\"} alignItems={\"flex-end\"}>\r\n                  <Grid item xs>\r\n                    <div style={{float: \"right\"}}>\r\n                      <Button size={\"small\"} variant={\"contained\"} onClick={this.generateMac}\r\n                              color={\"primary\"}>Generate</Button>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n          </Box>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PinGenBox from \"./PinGenBox\";\r\nimport MacGenBox from \"./MacGenBox\";\r\n\r\n// FieldExtras shows additional options for a field and an option to view/edit\r\n// field value within a large field (TextArea) and is useful when editing fields with large values\r\nexport default class FieldExtras extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {show: this.props.show, value: this.props.value};\r\n    this.closeThis = this.closeThis.bind(this);\r\n    this.valueChanged = this.valueChanged.bind(this);\r\n    this.setValue = this.setValue.bind(this);\r\n  }\r\n\r\n  valueChanged(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  closeThis() {\r\n    this.setState({show: true});\r\n    this.props.onClose(this.state.value);\r\n  }\r\n\r\n  setValue(val) {\r\n    this.setState({value: val})\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.show === false && this.props.show === true && this.state.show === false) {\r\n      this.setState({show: true, value: this.props.value})\r\n    } else if (this.props.show === false && this.state.show === true) {\r\n      this.setState({show: false, value: this.props.value})\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let dynamicGenerators = null;\r\n\r\n\r\n\r\n    if (this.props.field.GenType === 'pin_gen') {\r\n      dynamicGenerators = <PinGenBox field={this.props.field} setPinBlock={this.setValue} isoMsg={this.props.isoMsg}/>\r\n    }else if(this.props.field.GenType === 'mac_gen'){\r\n      dynamicGenerators = <MacGenBox field={this.props.field} setMac={this.setValue} isoMsg={this.props.isoMsg}/>\r\n    }\r\n\r\n    return (\r\n\r\n        (this.state.show === true) ?\r\n\r\n            <React.Fragment>\r\n              <div style={{\r\n                width: '100%', height: '100%', paddingTop: \"20px\", paddingBottom: \"20px\"\r\n              }}>\r\n\r\n                {dynamicGenerators}\r\n                <div style={{paddingBottom: \"5px\", paddingTop: \"10px\"}}>\r\n                  <TextField fullWidth={true} rows={4} multiline={true} variant={\"outlined\"}\r\n                             label={\"Field Value\"} style={{paddingBottom: \"5px\"}}\r\n                             onChange={this.valueChanged} disabled={this.props.readOnly}\r\n                             value={this.state.value}/>\r\n\r\n                  <div style={{float: \"right\", paddingBottom: '5px'}}>\r\n                    <Button size={\"small\"} variant={\"contained\"} color={\"primary\"}\r\n                            onClick={this.closeThis}> OK </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </React.Fragment> : null);\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport FieldExtras from '../../Utils/FieldExtras.js'\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport fieldValidator from \"../../Utils/FieldValidator\";\r\nimport {AppProps} from \"../../Utils/Properties\";\r\n\r\n// IsoField represents a single field from a ISO8583 specification\r\nexport default class IsoField extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fieldValueChanged = this.fieldValueChanged.bind(this);\r\n    this.fieldSelectionChanged = this.fieldSelectionChanged.bind(this);\r\n    this.onFieldUpdate = this.onFieldUpdate.bind(this);\r\n    this.appendFieldContent = this.appendFieldContent.bind(this);\r\n    this.setSelected = this.setSelected.bind(this);\r\n    this.setNewValue = this.setNewValue.bind(this);\r\n    this.showExpanded = this.showExpanded.bind(this);\r\n    this.closeExpanded = this.closeExpanded.bind(this);\r\n    this.getBgColor = this.getBgColor.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n    this.toggleExpanded = this.toggleExpanded.bind(this);\r\n    this.onFocusLost = this.onFocusLost.bind(this);\r\n    this.applyPadding = this.applyPadding.bind(this);\r\n\r\n    //if the field is Message Type, MTI or Bitmap - it should stay selected\r\n    //because they're mandatory fields in ISO\r\n\r\n    let initialExpandBtnLabel = '+';\r\n    this.selectable = true;\r\n    //readOnly is true when displaying a response segment\r\n    if (this.props.readOnly) {\r\n      this.selectable = false;\r\n\r\n      let selected = false;\r\n      let fieldValue = this.props.id2Value.get(this.props.field.ID)\r\n      if (fieldValue) {\r\n        selected = true;\r\n      }\r\n\r\n      this.state = {\r\n        fieldEditable: true,\r\n        bgColor: 'white',\r\n        hasError: false,\r\n        selected: selected,\r\n        id2Value: this.props.id2Value,\r\n        fieldValue: fieldValue,\r\n        expandBtnLabel: initialExpandBtnLabel,\r\n        showExpanded: false,\r\n        field: this.props.field\r\n      };\r\n    } else {\r\n      let defaultFieldValue = \"\";\r\n      if ([\"Message Type\", \"MTI\", \"Bitmap\"].includes(this.props.field.Name)) {\r\n        this.selectable = false;\r\n        let fieldEditable = true;\r\n        if (this.props.field.Name === \"Bitmap\") {\r\n          defaultFieldValue = Array(128).fill('0').reduce((p = \"\", c) => p + c);\r\n          // Bitmap should not be editable\r\n          fieldEditable = false;\r\n        }\r\n\r\n        this.state = {\r\n          fieldEditable: fieldEditable,\r\n          bgColor: \"white\",\r\n          hasError: false,\r\n          selected: true,\r\n          fieldValue: defaultFieldValue,\r\n          expandBtnLabel: initialExpandBtnLabel,\r\n          showExpanded: false,\r\n          field: this.props.field\r\n        };\r\n      } else {\r\n        this.state = {\r\n          fieldEditable: true,\r\n          bgColor: \"white\",\r\n          selected: false,\r\n          hasError: false,\r\n          fieldValue: defaultFieldValue,\r\n          expandBtnLabel: initialExpandBtnLabel,\r\n          showExpanded: false,\r\n          field: this.props.field\r\n        };\r\n      }\r\n      this.props.isoMsg.set(this.props.field.ID, this);\r\n    }\r\n  }\r\n\r\n  getBgColor() {\r\n    if (this.state.hasError) {\r\n      return \"red\";\r\n    } else {\r\n      return \"white\";\r\n    }\r\n\r\n  }\r\n\r\n  setError(hasError) {\r\n    this.setState({hasError: hasError});\r\n  }\r\n\r\n  showExpanded() {\r\n    this.setState({showExpanded: true});\r\n  }\r\n\r\n  toggleExpanded() {\r\n    if (this.state.showExpanded) {\r\n      this.setState({showExpanded: false, expandBtnLabel: '+'});\r\n    } else {\r\n      this.setState({showExpanded: true, expandBtnLabel: '-'});\r\n    }\r\n\r\n  }\r\n\r\n  closeExpanded() {\r\n    this.setState({showExpanded: false});\r\n  }\r\n\r\n  setNewValue(newValue) {\r\n\r\n    let val = this.applyPadding(this.state.selected, newValue);\r\n    this.setState({fieldValue: val, showExpanded: false, selected: true});\r\n    this.toggleExpanded()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.id2Value !== this.props.id2Value) {\r\n      this.setState({\r\n        fieldValue: this.props.id2Value.get(this.props.field.ID), id2Value: this.props.id2Value\r\n      });\r\n    }\r\n  }\r\n\r\n  onFieldUpdate(event) {\r\n    //console.log(\"onField Update\", this.props.field);\r\n    //console.log(\r\n    //    `${this.props.field.Name}: Child field ${event.fieldName} has been updated. ChangeType: ${event.ChangeType}`);\r\n\r\n    if (this.props.field.Type === AppProps.BitmappedField) {\r\n      // get the position of the field\r\n      this.props.field.Children.forEach(f => {\r\n\r\n        if (f.Name === event.fieldName) {\r\n          let currentVal = this.state.fieldValue;\r\n          let bits = Array.from(currentVal);\r\n          //console.log(\"Changing bit \" + f.Position);\r\n          if (event.ChangeType === 'FieldSelected') {\r\n            bits[f.Position - 1] = '1';\r\n            if (f.Position > 64) {\r\n              bits[0] = '1';\r\n            }\r\n          } else if (event.ChangeType === 'FieldDeselected') {\r\n            bits[f.Position - 1] = '0';\r\n\r\n            //if all bits from 65 to 128 are off then turn bit 1 off\r\n            let turnOff = true;\r\n            for (let i = 65; i <= 128; i++) {\r\n              if (bits[i - 1] === '1') {\r\n                turnOff = false;\r\n                break;\r\n              }\r\n            }\r\n            if (turnOff) {\r\n              bits[0] = '0';\r\n            }\r\n\r\n          }\r\n          let newValue = bits.reduce((p = \"\", c) => p + c);\r\n          this.setState({fieldValue: newValue})\r\n\r\n        }\r\n      })\r\n    } else {\r\n\r\n      let obj = {fieldName: this.props.field.Name};\r\n      if (event.ChangeType === 'FieldSelected') {\r\n        //console.log(\"setting self as selected\", this.props.field.Name);\r\n        this.setState({selected: true});\r\n        obj.ChangeType = \"FieldSelected\";\r\n      } else if (event.ChangeType === 'FieldDeselected') {\r\n        this.setState({selected: false});\r\n        obj.ChangeType = \"FieldDeselected\";\r\n      } else {\r\n\r\n        //TODO:: field value has changed, it needs to be parsed and children\r\n        // have to be changed - wait for the new WASM library for ISO parsing capabilities\r\n        // on the frontend :-)\r\n\r\n      }\r\n\r\n      // for fixed and variable type field, if they have children\r\n      // the whole set of children and then let the parent know too\r\n\r\n      this.props.field.Children.forEach(c => {\r\n        if (event.ChangeType === 'FieldSelected') {\r\n          this.props.isoMsg.get(c.ID).setSelected(true);\r\n        } else if (event.ChangeType === 'FieldDeselected') {\r\n          this.props.isoMsg.get(c.ID).setSelected(false);\r\n        }\r\n      });\r\n\r\n      //pass on the message to the parent that I have changed\r\n      this.props.onFieldUpdate(obj);\r\n\r\n    }\r\n  }\r\n\r\n  setSelected(selected) {\r\n\r\n    //console.log(\"Calling apply padding \" + this.state.fieldValue)\r\n    let val = this.applyPadding(selected);\r\n    //this.setState({fieldValue: val, selected: selected});\r\n    this.props.field.Children.forEach(c => {\r\n      this.props.isoMsg.get(c.ID).setSelected(selected);\r\n    });\r\n\r\n    if (selected) {\r\n      let errors = []\r\n      if (fieldValidator.validate(this.props.field, val, errors)) {\r\n\r\n        this.setState({fieldValue: val, hasError: true, errMsg: errors[0], selected: selected});\r\n      } else {\r\n\r\n        this.setState({fieldValue: val, hasError: false, errMsg: null, selected: selected});\r\n      }\r\n    } else {\r\n      this.setState({fieldValue: val, hasError: false, errMsg: null, selected: selected});\r\n\r\n    }\r\n\r\n  }\r\n\r\n  fieldSelectionChanged(event) {\r\n\r\n    let obj = {fieldName: this.props.field.Name};\r\n    let selected = false;\r\n    if (event.target.checked) {\r\n      obj.ChangeType = \"FieldSelected\";\r\n      selected = true;\r\n    } else {\r\n      obj.ChangeType = \"FieldDeselected\";\r\n    }\r\n\r\n    if (this.props.field.Type !== AppProps.BitmappedField) {\r\n      this.setSelected(selected);\r\n    }\r\n    this.props.onFieldUpdate(obj)\r\n  }\r\n\r\n  onFocusLost() {\r\n\r\n    let val = this.applyPadding(this.state.selected)\r\n\r\n    let errors = []\r\n    if (this.state.selected) {\r\n      if (fieldValidator.validate(this.props.field, val, errors)) {\r\n        this.setState({fieldValue: val, hasError: true, errMsg: errors[0]})\r\n      } else {\r\n\r\n        this.setState({fieldValue: val, hasError: false, errMsg: null});\r\n        let obj = {\r\n          fieldName: this.props.field.Name, ChangeType: \"ValueChanged\", Value: val\r\n        };\r\n        this.props.onFieldUpdate(obj)\r\n      }\r\n    } else {\r\n      this.setState({fieldValue: val, hasError: false, errMsg: null});\r\n    }\r\n  }\r\n\r\n  //This method applied to the field if one is specified in the field definition\r\n  // selected - A boolean that represents if the field is currently selected (padding is applied only if the field is selected)\r\n  // initVal - The initial value for the field, if unspecified the current value on the state is used\r\n  applyPadding(selected, initVal = \"\") {\r\n\r\n    let val = initVal;\r\n\r\n    if (val === \"\") {\r\n      val = this.state.fieldValue;\r\n    }\r\n\r\n    if (val === undefined) {\r\n      val = \"\";\r\n    }\r\n\r\n    let field = this.state.field;\r\n    if (field.Padding === \"\" || !selected) {\r\n      return val\r\n    }\r\n\r\n    if (field.Type === 'Fixed') {\r\n\r\n      let padding = '';\r\n      switch (field.DataEncoding) {\r\n        case 'ASCII':\r\n        case 'EBCDIC': {\r\n\r\n          if (val.length < field.FixedSize) {\r\n            for (let i = 0; i < (field.FixedSize - val.length); i++) {\r\n              if (field.Padding === 'LEADING_ZEROES' || field.Padding === 'TRAILING_ZEROES') {\r\n                padding += '0';\r\n              }\r\n              if (field.Padding === 'LEADING_SPACES' || field.Padding === 'TRAILING_SPACES') {\r\n                padding += ' ';\r\n              }\r\n            }\r\n            //console.log(\"Padding required = *\" + padding + \"*\")\r\n            if (field.Padding.startsWith('LEADING')) {\r\n              val = padding + val;\r\n            } else {\r\n              val = val + padding;\r\n            }\r\n          }\r\n          break;\r\n        }//end ASCII/EBCDIC\r\n\r\n        case 'BCD': {\r\n          let padding = '';\r\n          let expectedLength = field.FixedSize * 2;\r\n          if (val.length < expectedLength) {\r\n            for (let i = 0; i < (expectedLength - val.length); i++) {\r\n              padding += '0';\r\n            }\r\n          }\r\n          if (field.Padding === 'LEADING_ZEROES') {\r\n            val = padding + val;\r\n          } else if (field.Padding === 'TRAILING_ZEROES') {\r\n            val += padding;\r\n          } else {\r\n            console.log(`Unsupported padding - ${field.Padding} for Fixed BCD field`);\r\n          }\r\n\r\n          break;\r\n        }\r\n        case 'BINARY': {\r\n\r\n          let padding = '';\r\n          let expectedLength = field.FixedSize * 2;\r\n          if (val.length < expectedLength) {\r\n            for (let i = 0; i < (expectedLength - val.length); i++) {\r\n              if (field.Padding.endsWith('ZEROES')) {\r\n                padding += '0';\r\n              } else {\r\n                padding += 'F';\r\n              }\r\n\r\n            }\r\n          }\r\n          if (field.Padding.startsWith('LEADING_')) {\r\n            val = padding + val;\r\n          } else if (field.Padding.startsWith('TRAILING_')) {\r\n            val += padding;\r\n          }\r\n\r\n          break;\r\n        }\r\n        default: {\r\n          console.log(\"Unsupported field encoding type -\" + field.DataEncoding);\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n    return val;\r\n\r\n  }\r\n\r\n  fieldValueChanged(event) {\r\n    this.setState({hasError: false, errMsg: null, fieldValue: event.target.value});\r\n\r\n  }\r\n\r\n  appendFieldContent(content, field, parentField, id2Value, level) {\r\n\r\n    let key = field.ID;\r\n    if (this.props.readOnly) {\r\n      key = 'response_seg_' + field.ID;\r\n    }\r\n    content.push(<IsoField key={key} field={field} id2Value={id2Value} isoMsg={this.props.isoMsg}\r\n                           readOnly={this.props.readOnly}\r\n                           parentField={parentField}\r\n                           level={level}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  render() {\r\n\r\n    let selectionColumnContent;\r\n\r\n    if (this.selectable) {\r\n      selectionColumnContent = <td align={\"center\"}><Checkbox type={\"checkbox\"} size={\"small\"}\r\n                                                              color={\"primary\"}\r\n                                                              checked={this.state.selected}\r\n                                                              onChange={this.fieldSelectionChanged}/>\r\n      </td>\r\n    } else {\r\n      selectionColumnContent = <td align={\"center\"}><Checkbox type={\"checkbox\"} size={\"small\"}\r\n                                                              color={\"primary\"}\r\n                                                              disabled={true}\r\n                                                              checked={this.state.selected}\r\n                                                              onChange={this.fieldSelectionChanged}/>\r\n      </td>\r\n    }\r\n    let positionInParent = \"\";\r\n    if (this.props.field.ParentId > 0) {\r\n      positionInParent = \"\\u2937\" + this.props.field.Position + \" \";\r\n    }\r\n\r\n    let fieldInfo = positionInParent + \" Type: \" + this.props.field.Type + ' / ';\r\n    if (this.props.field.Type === AppProps.FixedField) {\r\n      fieldInfo += \"Length: \" + this.props.field.FixedSize + ' / ' + 'Encoding: '\r\n          + this.props.field.DataEncoding;\r\n    } else if (this.props.field.Type === AppProps.VariableField) {\r\n      fieldInfo += \"Length Indicator: \" + this.props.field.LengthIndicatorSize + ' / '\r\n          + 'Length Encoding: ' + this.props.field.LengthEncoding + ' / ' + 'Data Encoding: '\r\n          + this.props.field.DataEncoding;\r\n    } else if (this.props.field.Type === AppProps.BitmappedField) {\r\n    }\r\n\r\n    let children = [];\r\n\r\n    this.props.field.Children.forEach(\r\n        c => this.appendFieldContent(children, c, this.props.field, this.state.id2Value,\r\n            this.props.level + 1));\r\n\r\n    let levelIndicator = \"\";\r\n    for (let i = 0; i < this.props.level; i++) {\r\n      levelIndicator += '\\u2193';\r\n    }\r\n\r\n    return (<React.Fragment>\r\n          <tr>\r\n            {/* selection column */}\r\n            {selectionColumnContent}\r\n\r\n            {/* field name column*/}\r\n\r\n            <OverlayTrigger overlay={(<Tooltip id=\"hi\"\r\n                                               style={{fontSize: '10px'}}>{fieldInfo}</Tooltip>)}\r\n                            placement=\"top\">\r\n              <td style={{\r\n                width: \"100px\", fontSize: \"12px\"\r\n              }}>\r\n                <InputLabel style={{fontSize: \"14px\"}}>{levelIndicator + ' '\r\n                + this.props.field.Name}</InputLabel>\r\n              </td>\r\n            </OverlayTrigger>\r\n\r\n            {/* field specification column */}\r\n            {/*fieldSpecColumnContent*/}\r\n\r\n            {/* field value column */}\r\n            <td>\r\n\r\n              <TextField margin={\"dense\"} size={\"small\"} variant={\"standard\"}\r\n                         value={this.state.fieldValue}\r\n                         error={this.state.hasError}\r\n                         helperText={this.state.errMsg}\r\n                         onChange={this.fieldValueChanged}\r\n                         style={{width: \"70%\"}}\r\n                         disabled={this.props.readOnly || !this.state.fieldEditable}\r\n                         key={\"fld_value_\" + this.state.field.ID}\r\n                         onBlur={this.onFocusLost}\r\n              />\r\n\r\n              <Button size={\"small\"} variant={\"contained\"} style={{\r\n                float: 'right', fontSize: '14px', marginRight: '2%', marginLeft: \"2%\"\r\n              }}\r\n                      onClick={this.toggleExpanded}> {this.state.expandBtnLabel}\r\n              </Button>\r\n\r\n            </td>\r\n\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"3\">\r\n              <FieldExtras show={this.state.showExpanded}\r\n                           field={this.state.field}\r\n                           value={this.state.fieldValue}\r\n                           readOnly={this.props.readOnly}\r\n                           isoMsg={this.props.isoMsg}\r\n                           onClose={this.setNewValue}/>\r\n            </td>\r\n          </tr>\r\n          {children}\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button} from \"react-bootstrap\";\r\nimport appProps from \"../Utils/Properties\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default class SelectMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show, selectedMsg: ''};\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.selectedMsgChanged = this.selectedMsgChanged.bind(this);\r\n  }\r\n\r\n  selectedMsgChanged(event) {\r\n    this.setState({selectedMsg: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //console.log(\"smd: componentDidUpdate\", this.state);\r\n    if (this.props.show === true && prevState.show === false) {\r\n\r\n      axios.get(appProps.loadMsgUrl, {\r\n        params: {\r\n          specId: this.props.specId,\r\n          msgId: this.props.msgId,\r\n        }\r\n      }).then(res => {\r\n        // console.log(res);\r\n        this.setState(\r\n            {\r\n              savedMsgs: res.data.saved_messages,\r\n              selectedMsg: res.data.saved_messages[0],\r\n              show: true\r\n            });\r\n\r\n      }).catch(e => {\r\n            //FIXME\r\n            console.log(e);\r\n            this.setState({show: true, errorMessage: e.response.data});\r\n          }\r\n      )\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n    this.setState({show: false});\r\n    this.props.closeLoadMsgDialog(this.state.selectedMsg);\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.setState({show: false});\r\n    //TODO:: also tell the parent that we're done\r\n    //and return the value of the selected saved msg\r\n    this.props.closeLoadMsgDialog(null);\r\n  }\r\n\r\n  render() {\r\n\r\n    let content;\r\n\r\n    if (this.state.show) {\r\n      if (this.state.errorMessage) {\r\n        content = <div>{this.state.errorMessage}</div>\r\n      } else {\r\n        content =\r\n            <React.Fragment>\r\n\r\n              <TextField type={\"text\"} key={\"msg_name_save\"}\r\n                         margin={\"dense\"}\r\n                         fullWidth={true} select={true}\r\n                         variant={\"outlined\"} label={\"Saved Message\"}\r\n                         value={this.state.selectedMsg}\r\n                         onChange={this.selectedMsgChanged}>\r\n\r\n\r\n                {this.state.savedMsgs.map((sm) => {\r\n                  return <MenuItem key={sm} value={sm}>{sm}</MenuItem>\r\n                })\r\n                }\r\n              </TextField>\r\n            </React.Fragment>;\r\n      }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n          <Dialog open={this.state.show} onClose={this.closeDialogFail}\r\n                  aria-labelledby=\"form-dialog-title\" fullWidth={true}\r\n                  maxWidth={\"sm\"}>\r\n            <DialogTitle id=\"form-dialog-title\" onClose={this.closeDialogFail}>Select\r\n              Message</DialogTitle>\r\n            <DialogContent>\r\n              <div>\r\n                <Grid container={true} spacing={2}>\r\n\r\n                  <Grid container>\r\n                    <Grid item lg={12} xl={12}>\r\n                      {content}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.closeDialogSuccess} color=\"primary\">\r\n                OK\r\n              </Button>\r\n              <Button onClick={this.closeDialogFail} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n\r\n\r\n        /*<Modal show={this.state.show}\r\n               onHide={this.closeDialogFail}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Load Saved Message</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.closeDialogSuccess}>\r\n              OK\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={this.closeDialogFail}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>*/\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport IsoField from \"./IsoField/IsoField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\n\r\n// ResponseSegment displays the response to an ISO message\r\nexport default class ResponseSegment extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: props.show, data: this.props.data, msgTemplate: this.props.msgTemplate\r\n    }\r\n    this.hideResponseSegment = this.hideResponseSegment.bind(this);\r\n    this.copyToClipboard = this.copyToClipboard.bind(this);\r\n\r\n    this.textAreaRef = React.createRef();\r\n  }\r\n\r\n  appendFieldContent(content, field, idToField, level) {\r\n    content.push(<IsoField key={'response_seg_' + field.ID} field={field}\r\n                           id2Value={idToField}\r\n                           readOnly={true} level={level}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n    return \"\"\r\n  }\r\n\r\n  hideResponseSegment() {\r\n    this.setState({show: false});\r\n    this.props.onClose();\r\n  }\r\n\r\n  collectData(field, idToValue, content) {\r\n    if (idToValue.get(field.ID)) {\r\n      let val = idToValue.get(field.ID);\r\n      content.push(`${field.Name}: ${val}`);\r\n    }\r\n    if (field.Children.length > 0) {\r\n      field.Children.forEach(cf => {\r\n        this.collectData(cf, idToValue, content)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (prevProps.show === false && this.props.show === true) {\r\n      this.setState({\r\n        show: true, data: this.props.data, msgTemplate: this.props.msgTemplate\r\n      })\r\n    }\r\n  }\r\n\r\n  copyToClipboard() {\r\n    this.textAreaRef.current.select();\r\n    if (!document.execCommand('copy')) {\r\n      alert('Failed to copy to clipboard!')\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let content = [];\r\n    let forClipboard = [];\r\n    if (this.state.show) {\r\n\r\n      let idToField = new Map();\r\n      this.state.data.forEach(f => {\r\n        idToField.set(f.ID, f.Value);\r\n      });\r\n\r\n      this.state.msgTemplate.fields.forEach(field => {\r\n        this.collectData(field, idToField, forClipboard)\r\n      });\r\n      let clipboardText = \"ISO Response  \\n|---------------|\\n\" + forClipboard.reduce(\r\n          (p, c, currentIndex) => {\r\n            if (currentIndex === 1) {\r\n              return p + \"\\n\" + c + \"\\n\";\r\n            } else {\r\n              return p + c + \"\\n\";\r\n            }\r\n          })\r\n\r\n      clipboardText = \"ISO Request  \\n|---------------|\\n\" + this.props.reqData + \"\\n\\n\"\r\n          + clipboardText + \"\\n\\n\";\r\n\r\n      this.state.msgTemplate.fields.forEach(field => {\r\n        this.appendFieldContent(content, field, idToField, 0)\r\n      });\r\n\r\n      //console.log(content);\r\n\r\n      return (<React.Fragment>\r\n\r\n\r\n        {this.state.show ? <Dialog open={this.state.show}\r\n                                   onClose={this.hideResponseSegment} scroll={\"paper\"}\r\n                                   PaperComponent={PaperComponent}\r\n                                   aria-labelledby=\"draggable-dialog-title\"\r\n                                   maxWidth={\"sm\"} fullWidth={true}\r\n                                   disableBackdropClick={true}>\r\n          <DialogTitle style={{cursor: 'move'}}\r\n                       id=\"draggable-dialog-title\">{this.props.dialogTitle}</DialogTitle>\r\n          <DialogContent dividers={true}>\r\n\r\n            <Paper>\r\n          <textarea ref={this.textAreaRef}\r\n                    style={{\r\n                      opacity: \"0.01\", position: \"absolute\", zIndex: -9999, height: 0\r\n                    }} value={clipboardText}/>\r\n\r\n\r\n              <table border=\"0\" align={\"center\"}>\r\n                <thead>\r\n                <tr style={{\r\n                  fontFamily: \"lato-regular\",\r\n                  backgroundColor: \"#eed143\",\r\n                  fontSize: \"15px\",\r\n                  align: \"center\",\r\n                  borderBottom: 'solid',\r\n                  borderColor: 'blue'\r\n                }}>\r\n                  <td colSpan=\"3\"\r\n                      align={\"center\"}>{\"Response Segment\"}</td>\r\n                </tr>\r\n                <tr style={{\r\n                  fontFamily: \"lato-regular\", backgroundColor: \"#3effba\", fontSize: \"14px\",\r\n                }}>\r\n                  <td align={\"center\"}>Selection</td>\r\n                  <td align={\"center\"} style={{width: \"35%\"}}>Field</td>\r\n                  <td align={\"center\"} style={{width: \"50%\"}}>Field Data\r\n                  </td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {content}\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.copyToClipboard} size=\"small\"\r\n                    color=\"primary\"\r\n                    variant={\"contained\"}>\r\n              Copy To Clipboard\r\n            </Button>\r\n            <Button onClick={this.hideResponseSegment} size=\"small\"\r\n                    color=\"primary\"\r\n                    variant={\"contained\"}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog> : null}\r\n      </React.Fragment>);\r\n\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (<Draggable handle=\"#draggable-dialog-title\"\r\n                     cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n    <Paper {...props} />\r\n  </Draggable>);\r\n}","import React from 'react'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nexport default class ParseMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show, traceMsg: '', errorMessage: null};\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.traceChanged = this.traceChanged.bind(this);\r\n    this.isValidTrace = this.isValidTrace.bind(this);\r\n  }\r\n\r\n  isValidTrace(trace) {\r\n    return !!(trace.trim() !== \"\" && (trace.length\r\n        % 2 === 0 && trace.match(\"^[0-9,a-f,A-F]+$\")));\r\n\r\n  }\r\n\r\n  traceChanged(event) {\r\n\r\n    let updatedTrace = event.target.value;\r\n\r\n    if (!this.isValidTrace(updatedTrace)) {\r\n      this.setState({\r\n        traceMsg: updatedTrace,\r\n        errorMessage: \"Input is not valid hex\"\r\n      });\r\n    } else {\r\n      this.setState({traceMsg: updatedTrace, errorMessage: null});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if (this.props.show === true && prevState.show === false) {\r\n      this.setState({show: true, traceMsg: ''});\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n    if (this.isValidTrace(this.state.traceMsg)) {\r\n      this.setState({show: false})\r\n      this.props.setTrace(this.state.traceMsg);\r\n    }\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.setState({show: false});\r\n    this.props.setTrace(null);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n        <div>\r\n          <Dialog open={this.state.show} onClose={this.closeDialogFail}\r\n                  aria-labelledby=\"form-dialog-title\" fullWidth={true}\r\n                  maxWidth={\"md\"}>\r\n            <DialogTitle id=\"form-dialog-title\" onClose={this.closeDialogFail}>Parse\r\n              Trace</DialogTitle>\r\n            <DialogContent>\r\n              <div>\r\n                <Grid container={true} spacing={2}>\r\n\r\n                  <Grid container>\r\n                    <Grid item lg={12} xl={12}>\r\n                      <TextField key={\"trace_input\"} variant={\"outlined\"}\r\n                                 label={\"Hex Trace\"} margin={\"dense\"}\r\n                                 fullWidth={true} value={this.state.traceMsg}\r\n                                 error={this.state.errorMessage !== null}\r\n                                 onChange={this.traceChanged} rows={10}\r\n                                 helperText={this.state.errorMessage}\r\n                                 multiline={true}/>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.closeDialogSuccess} color=\"primary\">\r\n                OK\r\n              </Button>\r\n              <Button onClick={this.closeDialogFail} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button} from \"react-bootstrap\";\r\nimport appProps from \"../Utils/Properties\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nexport default class SaveMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: props.show,\r\n      msgName: props.initialMessage,\r\n      \"updateIfExists\": false\r\n    };\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.msgNameChanged = this.msgNameChanged.bind(this);\r\n    this.updateIfExistsChanged = this.updateIfExistsChanged.bind(this);\r\n  }\r\n\r\n  msgNameChanged(event) {\r\n    this.setState({errorMessage: '', msgName: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.show === true && prevState.show === false) {\r\n\r\n      this.setState(\r\n          {show: true, msgName: this.props.msgName});\r\n\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n\r\n    if (!this.state.msgName || this.state.msgName === \"\" || !this.props.data) {\r\n      this.setState({errorMessage: 'Please specify a message!'});\r\n      return;\r\n    }\r\n\r\n    let postData = 'specId=' + this.props.specId + '&msgId=' + this.props.msgId\r\n        + '&dsName=' + this.state.msgName + '&updateMsg='\r\n        + this.state.updateIfExists + '&msg=' + JSON.stringify(\r\n            this.props.data);\r\n\r\n    axios.post(appProps.saveMsgUrl, postData).then(res => {\r\n      console.log(res);\r\n      this.props.msgSaveSuccess(this.state.msgName, this.state.updateIfExists);\r\n      this.setState({show: false});\r\n\r\n    }).catch(e => {\r\n          this.props.msgSaveFailed(e);\r\n          this.setState({show: false});\r\n        }\r\n    );\r\n\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.props.msgSaveCancelled();\r\n    this.setState({show: false});\r\n  }\r\n\r\n  updateIfExistsChanged(event) {\r\n    this.setState({updateIfExists: event.target.checked});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <Dialog open={this.state.show} onClose={this.closeDialogFail}\r\n                  aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"sm\"}>\r\n            <DialogTitle id=\"form-dialog-title\" onClose={this.closeDialogFail}>Save Message</DialogTitle>\r\n            <DialogContent>\r\n              <div>\r\n                <Grid container={true} spacing={2}>\r\n\r\n                  <Grid container>\r\n                    <Grid item lg={12} xl={12}>\r\n                      <TextField type={\"text\"} key={\"msg_name_save\"} margin={\"dense\"}\r\n                                 fullWidth={true}\r\n                                 variant={\"outlined\"} label={\"Message Name\"}\r\n                                 value={this.state.msgName}\r\n                                 onChange={this.msgNameChanged}/>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container>\r\n                    <Grid item xs={4}>\r\n                      <FormControlLabel\r\n                          control={<Checkbox key={\"key_update_if_exists\"}\r\n                                             size={\"sm\"}\r\n                                             checked={this.state.updateIfExists}\r\n                                             onChange={this.updateIfExistsChanged}/>}\r\n                          label={\"Overwrite\"}/>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.closeDialogSuccess} color=\"primary\">\r\n                OK\r\n              </Button>\r\n              <Button onClick={this.closeDialogFail} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n// NetworkSettings is a component that manages the ip, port and MLI type\r\n// used when sending a message\r\nclass NetworkSettings extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      targetServerIp: \"127.0.0.1\",\r\n      targetServerPort: \"6666\",\r\n      mliType: \"2i\"\r\n    }\r\n\r\n    this.serverIpChanged = this.serverIpChanged.bind(this);\r\n    this.serverPortChanged = this.serverPortChanged.bind(this);\r\n    this.mliTypeChanged = this.mliTypeChanged.bind(this);\r\n\r\n  }\r\n\r\n  mliTypeChanged(e) {\r\n    this.setState({mliType: e.target.value});\r\n    this.props.onChange(this.state.targetServerIp, this.state.targetServerPort,\r\n        e.target.value)\r\n  }\r\n\r\n  serverIpChanged(e) {\r\n    this.setState({targetServerIp: e.target.value});\r\n    this.props.onChange(e.target.value, this.state.targetServerPort,\r\n        this.state.mliType)\r\n  }\r\n\r\n  serverPortChanged(e) {\r\n    this.setState({targetServerPort: e.target.value});\r\n    this.props.onChange(this.state.targetServerIp, e.target.value,\r\n        this.state.mliType)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div align={\"left\"}\r\n             style={{\r\n               align: 'left',\r\n               height: \"80px\",\r\n               verticalAlign: \"baseline\",\r\n               margin: \"10px\"\r\n             }}>\r\n\r\n\r\n          <table\r\n              style={{\r\n                fontFamily: 'lato-regular',\r\n                fontSize: '14px'\r\n              }}>\r\n            <tr>\r\n              <td>\r\n                <TextField id=\"ns_ip\" label=\"IP\" size={\"small\"}\r\n                           variant=\"outlined\" defaultValue={\"127.0.0.1\"}\r\n                           onChange={this.serverIpChanged}/>\r\n              </td>\r\n              <td>\r\n\r\n                <TextField id=\"ns_port\" label=\"Port\" size={\"small\"}\r\n                           variant=\"outlined\" defaultValue={\"6666\"}\r\n                           onChange={this.serverPortChanged}/>\r\n              </td>\r\n\r\n              <td>\r\n                <TextField select size={\"small\"}\r\n                    value={this.state.mliType} variant={\"outlined\"} label={\"MLI\"}\r\n                    onChange={this.mliTypeChanged}>\r\n                  <MenuItem value={\"2i\"}>2I</MenuItem>\r\n                  <MenuItem value={\"2e\"}>2E</MenuItem>\r\n                  <MenuItem value={\"4i\"}>4I</MenuItem>\r\n                  <MenuItem value={\"4e\"}>4E</MenuItem>\r\n                </TextField>\r\n\r\n              </td>\r\n\r\n            </tr>\r\n          </table>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NetworkSettings","import React from 'react';\r\nimport axios from \"axios\";\r\nimport IsoField from './IsoField/IsoField.js'\r\nimport SelectMessageDialog from '../Dialogs/SelectMessageDialog.js'\r\nimport {Button} from \"@material-ui/core\";\r\nimport appProps from '../Utils/Properties.js'\r\nimport ResponseSegment from \"./ResponseSegment\";\r\nimport ParseMessageDialog from \"../Dialogs/ParseMessageDialog\";\r\nimport SaveMessageDialog from \"../Dialogs/SaveMessageDialog\";\r\n\r\nimport 'typeface-roboto';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NetworkSettings from \"../Utils/NetworkSettings\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\nimport MsgUtils from \"../Utils/MsgUtils.js\";\r\n\r\n// MessageStructure is the central component that encompasses the Request and\r\n// the response segments along with NetworkSettings etc\r\nexport default class MessageStructure extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(this.props);\r\n    //console.log(\"$msg_structure$\", this.props.specs, this.props.spec, this.props.msg);\r\n\r\n    this.state = {\r\n      msgTemplate: null,\r\n      loaded: false,\r\n      spec: props.spec,\r\n      msg: props.msg,\r\n      shouldShow: props.showMsgTemplate,\r\n      targetServerIp: '127.0.0.1',\r\n      targetServerPort: '6666',\r\n      mliType: \"2I\",\r\n      currentDataSet: '',\r\n      errDialogVisible: false,\r\n      errorMessage: '',\r\n      showLoadMessagesDialog: false,\r\n      showTraceInputDialog: false,\r\n      showSaveMsgDialog: false,\r\n      showResponse: false,\r\n      responseData: null,\r\n      reqMenuVisible: false,\r\n      selectedReqMenuItem: null,\r\n      reqClipboardData: null\r\n    };\r\n\r\n    this.onFieldUpdate = this.onFieldUpdate.bind(this);\r\n    this.appendFieldContent = this.appendFieldContent.bind(this);\r\n    this.sendToHost = this.sendToHost.bind(this);\r\n    //this.addFieldContent = this.addFieldContent.bind(this);\r\n    this.showErrorDialog = this.showErrorDialog.bind(this);\r\n    this.closeErrorDialog = this.closeErrorDialog.bind(this);\r\n    this.processError = this.processError.bind(this);\r\n    this.showLoadMessagesDialog = this.showLoadMessagesDialog.bind(this);\r\n    this.closeLoadMsgDialog = this.closeLoadMsgDialog.bind(this);\r\n    this.showUnImplementedError = this.showUnImplementedError.bind(this);\r\n    this.setTrace = this.setTrace.bind(this);\r\n    this.showTraceInputsDialog = this.showTraceInputsDialog.bind(this);\r\n    this.showSaveMsgDialog = this.showSaveMsgDialog.bind(this);\r\n\r\n    this.msgSaveSuccess = this.msgSaveSuccess.bind(this);\r\n    this.msgSaveFailed = this.msgSaveFailed.bind(this);\r\n    this.msgSaveCancelled = this.msgSaveCancelled.bind(this);\r\n    this.showInfoDialog = this.showInfoDialog.bind(this);\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.hideMenu = this.hideMenu.bind(this);\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n    this.showResponseDialog = this.showResponseDialog.bind(this);\r\n    this.getTemplateLabel = this.getTemplateLabel.bind(this);\r\n    this.networkSettingsChanged = this.networkSettingsChanged.bind(this);\r\n    this.hideResponse = this.hideResponse.bind(this);\r\n\r\n  }\r\n\r\n  networkSettingsChanged(ip, port, mliType) {\r\n    this.setState({targetServerIp: ip, targetServerPort: port, mliType: mliType})\r\n  }\r\n\r\n  showMenu(event) {\r\n\r\n    this.setState({\r\n      selectedReqMenuItem: event.currentTarget, reqMenuVisible: true\r\n    })\r\n\r\n  }\r\n\r\n  hideMenu() {\r\n    this.setState({reqMenuVisible: false})\r\n    this.setState({selectedReqMenuItem: null})\r\n  }\r\n\r\n  showResponseDialog() {\r\n    this.hideMenu()\r\n    this.setState({showResponse: true})\r\n  }\r\n\r\n  hideResponse() {\r\n    this.setState({showResponse: false})\r\n\r\n  }\r\n\r\n  handleMenuClick(event) {\r\n    alert(event.currentTarget)\r\n\r\n    this.setState({selectedReqMenuItem: event.currentTarget})\r\n    this.hideMenu()\r\n  }\r\n\r\n  // Receives the trace as a callback from ParseMessageDialog component\r\n  setTrace(trace) {\r\n    if (trace != null) {\r\n      //console.log(\"trace  = \", trace);\r\n      // now parse this via a API call\r\n\r\n      axios.post(appProps.parseTraceUrl + '/' + this.state.spec.ID + '/' + this.state.msg.ID, trace)\r\n      .then(res => {\r\n        console.log(\"parsed msg data\", res.data);\r\n        res.data.parsed_fields.forEach(fd => {\r\n          let fieldComponent = this.state.isoMsg.get(fd.ID);\r\n          fieldComponent.setState({selected: true, fieldValue: fd.Value});\r\n        });\r\n      }).catch(e => {\r\n\r\n        console.log(\"error\", e);\r\n        this.processError(e)\r\n      })\r\n\r\n    }\r\n    this.setState({showTraceInputDialog: false})\r\n  }\r\n\r\n  showUnImplementedError() {\r\n    this.setState({\r\n      errorMessage: 'This functionality has not been implemented. Please try the old version of application.',\r\n      errDialogVisible: true\r\n    })\r\n  }\r\n\r\n  closeLoadMsgDialog(selectedMsg) {\r\n    this.setState({showLoadMessagesDialog: false, currentDataSet: selectedMsg});\r\n\r\n    if (selectedMsg != null) {\r\n      axios.get(appProps.loadMsgUrl, {\r\n        params: {\r\n          specId: this.state.spec.ID, msgId: this.state.msg.ID, dsName: selectedMsg\r\n        }\r\n      }).then(res => {\r\n        console.log(\"saved msg = \", res.data.saved_message);\r\n        res.data.saved_message.forEach(fd => {\r\n          let fieldComponent = this.state.isoMsg.get(fd.ID);\r\n          fieldComponent.setState({selected: true, fieldValue: fd.Value});\r\n        });\r\n      }).catch(e => {\r\n        console.log(e);\r\n        this.processError(e)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  showInfoDialog(msg) {\r\n    this.setState({errDialogVisible: true, errorMessage: msg})\r\n  }\r\n\r\n  msgSaveSuccess(msgName, updated) {\r\n    let type = \"saved\";\r\n    if (updated) {\r\n      type = \"updated\"\r\n    }\r\n    this.showInfoDialog(`Message ${msgName} ${type} successfully.`);\r\n    this.setState({showSaveMsgDialog: false});\r\n  }\r\n\r\n  msgSaveFailed(e) {\r\n    this.processError(e);\r\n    this.setState({showSaveMsgDialog: false});\r\n  }\r\n\r\n  msgSaveCancelled() {\r\n    this.setState({showSaveMsgDialog: false});\r\n  }\r\n\r\n  showSaveMsgDialog() {\r\n\r\n    // build the data and then\r\n    let content = [];\r\n    let validationErrors = [];\r\n    MsgUtils.getMsgContent(this.state.isoMsg, content, validationErrors)\r\n    this.setState({saveData: content, showSaveMsgDialog: true})\r\n  }\r\n\r\n  showTraceInputsDialog() {\r\n    this.hideMenu()\r\n    this.setState({showTraceInputDialog: true})\r\n\r\n  }\r\n\r\n  showLoadMessagesDialog() {\r\n    this.hideMenu()\r\n    this.setState({showLoadMessagesDialog: true})\r\n\r\n  }\r\n\r\n  closeErrorDialog() {\r\n    this.setState({errDialogVisible: false})\r\n  }\r\n\r\n  showErrorDialog() {\r\n    this.setState({errDialogVisible: true});\r\n  }\r\n\r\n  //sends the message (as JSON) to the API server to be sent to the ISO host\r\n  sendToHost() {\r\n\r\n    this.hideMenu()\r\n\r\n    let content = [];\r\n    let validationErrors = [];\r\n\r\n    MsgUtils.getMsgContent(this.state.isoMsg, content, validationErrors)\r\n\r\n    if (validationErrors.length > 0) {\r\n      let errMsg = \"\";\r\n      validationErrors.forEach(e => errMsg += e + \"\\n\");\r\n      this.setState({errorMessage: errMsg});\r\n      this.showErrorDialog();\r\n      return\r\n    }\r\n\r\n    console.log(content)\r\n    let reqClipboardData = content.reduce((p, c, currentIndex) => {\r\n\r\n      if (currentIndex === 1) {\r\n        return p.Name + \":\" + p.Value + \"\\n\" + c.Name + \":\" + c.Value + \"\\n\";\r\n      }\r\n      return p + c.Name + ':' + c.Value + \"\\n\";\r\n\r\n    });\r\n\r\n    //alert(reqClipboardData)\r\n\r\n    //lets not hide and then show the response segment again\r\n    this.setState({\r\n      showResponse: false, responseData: null, reqClipboardData: reqClipboardData\r\n    });\r\n\r\n    let postData = 'host=' + this.state.targetServerIp + \"&port=\" + this.state.targetServerPort\r\n        + '&mli=' + this.state.mliType + '&specId=' + this.state.spec.ID + '&msgId='\r\n        + this.state.msg.ID + \"&msg=\" + JSON.stringify(content);\r\n    //console.log(postData)\r\n    axios.post(appProps.sendMsgUrl, postData).then(res => {\r\n      console.log(\"Response from server\", res.data.response_fields);\r\n      this.setState({showResponse: true, responseData: res.data.response_fields});\r\n\r\n    }).catch(e => {\r\n      console.log(\"error = \", e);\r\n      this.processError(e)\r\n    })\r\n\r\n  }\r\n\r\n  processError(e) {\r\n\r\n    if (!e.response) {\r\n      console.log(\"Error = \", e);\r\n      this.setState({\r\n        errorMessage: 'Error: Unable to reach API server', errDialogVisible: true\r\n      });\r\n      return\r\n    }\r\n\r\n    console.log(e.response)\r\n\r\n    if (e.response.status === 400) {\r\n      this.setState({errorMessage: e.response.data.error, errDialogVisible: true});\r\n    } else {\r\n      this.setState({\r\n        errorMessage: 'Unexpected error from server - ' + e.response.status, errDialogVisible: true\r\n      });\r\n    }\r\n  }\r\n\r\n  getTemplateLabel() {\r\n    //alert(this.state.spec + \"// \" + this.state.msg)\r\n    return this.state.spec.Name + \" // \" + this.state.msg.Name;\r\n  }\r\n\r\n  onFieldUpdate(e) {\r\n    //console.log(\"field updated =>\" + e.fieldName)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMessageTemplate(this.props.spec, this.props.msg)\r\n  }\r\n\r\n  getMessageTemplate(pSpec, pMsg) {\r\n    let spec = this.props.specs.find(s => {\r\n      if (s.Name === pSpec) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n    let msg = spec.Messages.find(m => {\r\n      if (m.Name === pMsg) {\r\n        return m;\r\n      }\r\n\r\n      return null;\r\n    });\r\n\r\n    let url = appProps.templateUrl + '/' + spec.ID + \"/\" + msg.ID;\r\n    console.log(url);\r\n    axios.get(url).then(res => {\r\n      //console.log(res.data);\r\n      let isoMsg = new Map();\r\n      isoMsg.set(\"msg_template\", res.data);\r\n      isoMsg.set(\"spec_id\", spec.ID);\r\n      isoMsg.set(\"msg_id\", msg.ID);\r\n      this.setState({\r\n        spec: spec, msg: msg, msgTemplate: res.data, loaded: true, isoMsg: isoMsg\r\n      });\r\n\r\n      console.log(\"MsgTemplate = \", this.state.msgTemplate);\r\n    }).catch(err => {\r\n      console.log(err)\r\n      this.setState({errorMessage: err, errDialogVisible: true})\r\n    });\r\n  }\r\n\r\n  appendFieldContent(content, field, isoMsg, level) {\r\n    content.push(<IsoField key={field.ID} field={field} isoMsg={isoMsg}\r\n                           level={level}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  render() {\r\n\r\n    let content = [];\r\n    if (this.state.loaded === true) {\r\n      this.state.msgTemplate.fields.map(field => {\r\n        this.appendFieldContent(content, field, this.state.isoMsg, 0)\r\n      })\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{\r\n          fontFamily: 'lato-regular', fontSize: '12px', fill: 'aqua'\r\n        }}>\r\n\r\n          <AlertDialog show={this.state.errDialogVisible}\r\n                       msg={this.state.errorMessage}\r\n                       onClose={this.closeErrorDialog}/>\r\n\r\n\r\n          <SelectMessageDialog show={this.state.showLoadMessagesDialog}\r\n                               specId={this.state.spec.ID}\r\n                               msgId={this.state.msg.ID}\r\n                               closeLoadMsgDialog={this.closeLoadMsgDialog}/>\r\n\r\n          <ParseMessageDialog show={this.state.showTraceInputDialog}\r\n                              setTrace={this.setTrace}/>\r\n\r\n          <SaveMessageDialog show={this.state.showSaveMsgDialog}\r\n                             msgId={this.state.msg.ID}\r\n                             initialMessage={this.state.currentDataSet}\r\n                             specId={this.state.spec.ID}\r\n                             data={this.state.saveData}\r\n                             msgName={this.state.currentDataSet}\r\n                             msgSaveSuccess={this.msgSaveSuccess}\r\n                             msgSaveFailed={this.msgSaveFailed}\r\n                             msgSaveCancelled={this.msgSaveCancelled}/>\r\n\r\n          <NetworkSettings onChange={this.networkSettingsChanged}/>\r\n\r\n\r\n          <div align={\"left\"}\r\n               style={{\r\n                 align: \"left\", display: \"inline-block\", width: \"40%\", float: \"left\", fill: 'aqua'\r\n               }}>\r\n\r\n            <div>\r\n\r\n              <ButtonGroup size={\"small\"} color={\"primary\"} fullWidth={true}\r\n                           variant={\"contained\"}>\r\n                <Button\r\n                    onClick={this.showTraceInputsDialog}>Parse</Button>\r\n                <Button\r\n                    onClick={this.showLoadMessagesDialog}>Load</Button>\r\n                <Button\r\n                    onClick={this.showSaveMsgDialog}>Save</Button>\r\n                <Button onClick={this.sendToHost}>Send</Button>\r\n                <Button onClick={this.showResponseDialog}\r\n                        disabled={this.state.responseData == null}>Show\r\n                  Response</Button>\r\n              </ButtonGroup>\r\n\r\n            </div>\r\n\r\n            {/*TODO:: pull this into a separate component*/}\r\n            <Paper variation={\"outlined\"} style={{verticalAlign: \"middle\"}}>\r\n              <table border=\"0\" align={\"center\"}\r\n                     style={{align: \"center\", marginTop: \"10px\", width: \"80%\"}}>\r\n                <thead>\r\n                <tr style={{\r\n                  fontFamily: \"lato-regular\",\r\n                  backgroundColor: \"#ff8f5b\",\r\n                  fontSize: \"15px\",\r\n                  borderBottom: 'solid',\r\n                  borderColor: 'blue'\r\n                }}>\r\n                  <td colSpan=\"3\" align={\"center\"}>\r\n\r\n                    {/*\r\n                      <div style={{display: \"inline-block\", float: \"left\"}}>\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.showMenu}\r\n                        >\r\n                          <MoreVert/>\r\n                        </IconButton>\r\n\r\n                        <Menu\r\n                            id=\"fade-menu\"\r\n                            anchorEl={this.state.selectedReqMenuItem}\r\n                            getContentAnchorEl={null}\r\n                            keepMounted\r\n                            open={this.state.reqMenuVisible}\r\n                            onClose={this.hideMenu}\r\n                            TransitionComponent={Fade}\r\n                        >\r\n                          <MenuItem dense={true}\r\n                                    onClick={this.showTraceInputsDialog}>Parse</MenuItem>\r\n                          <MenuItem dense={true}\r\n                                    onClick={this.showLoadMessagesDialog}>Load\r\n                            Message</MenuItem>\r\n                          <MenuItem dense={true}\r\n                                    onClick={this.showSaveMsgDialog}>Save\r\n                            Message</MenuItem>\r\n                          <MenuItem dense={true} onClick={this.sendToHost}>Send\r\n                            Message</MenuItem>\r\n                          <MenuItem dense={true}\r\n                                    onClick={this.showResponseDialog}>Show\r\n                            Response</MenuItem>\r\n                        </Menu>\r\n                      </div>\r\n                    */}\r\n                    <div\r\n                        style={{display: \"inline-block\"}}>{this.getTemplateLabel()}</div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{\r\n                  fontFamily: \"lato-regular\", backgroundColor: \"#ff8f5b\", fontSize: \"14px\",\r\n                }}>\r\n                  <td align={\"center\"}>Selection</td>\r\n                  <td align={\"center\"} style={{width: '35%'}}> Field</td>\r\n                  <td align={\"center\"} style={{width: '70%'}}>Field Data\r\n                  </td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {content}\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n\r\n            {/*<div style={{float: \"right\"}}>*/}\r\n            <ResponseSegment show={this.state.showResponse}\r\n                             reqData={this.state.reqClipboardData}\r\n                             onClose={this.hideResponse}\r\n                             data={this.state.responseData}\r\n                             dialogTitle={\"Response - [\" + this.getTemplateLabel() + \"]\"}\r\n                             msgTemplate={this.state.msgTemplate}/>\r\n\r\n          </div>\r\n\r\n\r\n          <div style={{height: \"10px\"}}>{' '}</div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n","import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport appProps from \"../../Utils/Properties\";\r\nimport {Folder, Home, Message} from \"@material-ui/icons\"\r\n\r\n// SpecTree displays a tree of all the available specifications and the messages\r\n// defined under the spec\r\nclass SpecTree extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      specs: [], loaded: false, errDialogVisible: false, errorMessage: ''\r\n    };\r\n    this.messageClicked = this.messageClicked.bind(this);\r\n  }\r\n\r\n  messageClicked(event) {\r\n    // FIXME:: This is a hack! There needs to be a better way like onSelect\r\n    let specId = event.target.parentElement.parentElement.getAttribute(\"sid\");\r\n    let msgId = event.target.parentElement.parentElement.getAttribute(\"mid\");\r\n\r\n    this.props.msgSelected(specId, msgId);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(appProps.allSpecsUrl).then(res => {\r\n      console.log(\"allSpecs\", res.data);\r\n      this.setState({specs: res.data.specs, loaded: true});\r\n      let timerId = setInterval(function () {\r\n        alert('Select one of the spec and message in the tree to get started!')\r\n        clearInterval(timerId)\r\n      }, 2)\r\n\r\n    }).catch(err => console.log(err))\r\n  }\r\n\r\n  buildMessages(spec) {\r\n    let content = []\r\n    spec.Messages.forEach(m => {\r\n      content.push(<TreeItem nodeId={\"nodeId_\" + spec.ID + \"_\" + m.ID}\r\n                             sid={spec.ID} mid={m.ID}\r\n                             label={m.Name}\r\n                             onClick={this.messageClicked}/>)\r\n    });\r\n    return content\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.loaded === true) {\r\n\r\n      let content = [];\r\n      this.state.specs.forEach(s => {\r\n\r\n        content.push(<TreeItem align=\"left\" nodeId={\"nodeId_\" + s.ID}\r\n                               icon={<Folder color={\"primary\"}/>}\r\n                               label={s.Name}>{this.buildMessages(s)}</TreeItem>);\r\n\r\n      });\r\n\r\n      let treeContent = <TreeItem nodeId={\"nodeId_0\"}\r\n                                  icon={<Home color={\"primary\"}/>}\r\n                                  label={\"ISO8583 Specifications\"}>{content}</TreeItem>;\r\n\r\n      return (<React.Fragment>\r\n        <TreeView\r\n            defaultExpanded={['nodeId_0']}\r\n            defaultCollapseIcon={<ExpandMoreIcon/>}\r\n            defaultExpandIcon={<ChevronRightIcon/>}\r\n            defaultParentIcon={<Folder color={\"primary\"}/>}\r\n            defaultEndIcon={<Message color=\"primary\"/>}\r\n        >\r\n          {treeContent}\r\n        </TreeView>\r\n\r\n\r\n      </React.Fragment>);\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default SpecTree;","import React from 'react';\r\nimport axios from 'axios'\r\nimport MessageStructure from '../Iso/MessageStructure.js'\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport appProps from \"../Utils/Properties\";\r\nimport SpecTree from \"./SpecTree/SpecTree\";\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      specs: [],\r\n      currentSpec: \"Select\",\r\n      currentSpecMsg: \"\",\r\n      showMsgTemplate: false,\r\n      loaded: false,\r\n      errDialogVisible: false,\r\n      errorMessage: ''\r\n    };\r\n    this.specChanged = this.specChanged.bind(this);\r\n    this.messageChanged = this.messageChanged.bind(this);\r\n    this.msgSelected = this.msgSelected.bind(this);\r\n    this.getSpecByID = this.getSpecByID.bind(this);\r\n\r\n    this.msgTemplateRef = React.createRef();\r\n\r\n  }\r\n\r\n  msgSelected(specId, msgId) {\r\n\r\n    console.log(specId, msgId)\r\n    console.log(this.state.specs)\r\n    let spec = this.getSpecByID(parseInt(specId))\r\n    console.log(\"spec = \", spec)\r\n    let msg = null;\r\n    spec.Messages.forEach(m => {\r\n      if (m.ID === parseInt(msgId)) {\r\n        msg = m;\r\n      }\r\n    })\r\n\r\n    this.setState(\r\n        {loaded: true, currentSpec: spec.Name, currentSpecMsg: msg.Name});\r\n\r\n  }\r\n\r\n  closeErrorDialog() {\r\n    this.setState({errDialogVisible: false})\r\n  }\r\n\r\n  showErrorDialog() {\r\n    this.setState({errDialogVisible: true});\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(appProps.allSpecsUrl).then(res => {\r\n      console.log(res.data);\r\n      this.setState({specs: res.data.specs, loaded: true});\r\n    }).catch(\r\n        err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n\r\n    let msg;\r\n    let spec;\r\n\r\n    if (this.state.loaded === true) {\r\n      spec = this.getCurrentSpec();\r\n      if (spec == null) {\r\n        spec = this.state.specs[0];\r\n      }\r\n\r\n      if (!this.state.currentSpecMsg) {\r\n        msg = spec.Messages[0].Name;\r\n      } else {\r\n        msg = this.state.currentSpecMsg;\r\n      }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n\r\n          <div>\r\n            <Modal show={this.state.errDialogVisible}\r\n                   onHide={this.closeErrorDialog}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Error</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{this.state.errorMessage}</Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.closeErrorDialog}>\r\n                  Close\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            <div style={{\r\n              float: \"left\",\r\n              display: \"inline-block\",\r\n              marginRight: \"20px\",\r\n              marginLeft: \"20px\",\r\n              backgroundColor:'#fbfff0'\r\n\r\n            }}>\r\n              <SpecTree msgSelected={this.msgSelected}/>\r\n            </div>\r\n            <div align=\"center\" style={{backgroundColor:'#fbfff0'}}>\r\n              {\r\n                this.state.loaded && this.state.currentSpec !== \"Select\" ?\r\n                    <MessageStructure key={this.state.currentSpec + \"_\" + msg}\r\n                                      ref={this.msgTemplateRef}\r\n                                      specs={this.state.specs}\r\n                                      spec={this.state.currentSpec}\r\n                                      msg={this.state.currentSpecMsg}/>\r\n                    : null\r\n              }\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\n  specChanged(event) {\r\n\r\n    this.setState({\r\n      currentSpec: event.target.value,\r\n      currentSpecMsg: \"\"\r\n    });\r\n\r\n    console.log(event.target.value);\r\n    if (this.state.loaded && event.target.value !== \"Select\") {\r\n      console.log(\"calling update - specChanged\");\r\n    }\r\n  }\r\n\r\n  messageChanged(event) {\r\n    this.setState({currentSpecMsg: event.target.value});\r\n\r\n    if (this.state.loaded && this.state.currentSpec !== \"Select\") {\r\n      console.log(\"calling update - msgChanged\");\r\n\r\n    }\r\n  }\r\n\r\n  // builds a combo box for specifications\r\n  specsDropDown() {\r\n    return (\r\n        <select style={{fontFamily: \"lato-regular\", width: \"200px\",}}\r\n                onChange={this.specChanged}>\r\n          <option key={\"Select\"} value={\"Select\"}>Select</option>\r\n          {\r\n            this.state.specs.map((s) => {\r\n              return <option key={s.Name} value={s.Name}>{s.Name}</option>\r\n            })\r\n          }\r\n\r\n        </select>);\r\n  }\r\n\r\n  // builds and returns a combo box for messages for the current spec\r\n  messagesDropDown() {\r\n\r\n    let spec;\r\n\r\n    if (this.state.loaded) {\r\n      spec = this.getCurrentSpec();\r\n    }\r\n\r\n    // no spec loaded\r\n    if (this.state.currentSpec === \"Select\") {\r\n      return (<select/>);\r\n    } else {\r\n\r\n      return (\r\n\r\n          <select value={this.state.currentSpecMsg}\r\n                  style={{fontFamily: \"lato-regular\", width: \"150px\"}}\r\n                  onChange={this.messageChanged}>\r\n            {\r\n              spec.Messages.map(msg => {\r\n                return <option key={msg.ID}\r\n                               value={msg.Name}>{msg.Name}</option>\r\n              })\r\n            }\r\n\r\n          </select>\r\n\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // returns the currently loaded spec (if there is one) else null\r\n  getCurrentSpec() {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.Name === this.state.currentSpec) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  // returns specification given its name\r\n  getSpecByName(name) {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.Name === name) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  // returns specification given its name\r\n  getSpecByID(specId) {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.ID === specId) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/Navigation/NavBar.js'\r\n\r\nfunction App() {\r\n  return (\r\n      <div style={{backgroundColor: '#fbfff0'}}>\r\n        <h1 style={{fontFamily: \"shadows-into-light\"}}>ISO WebSim - ISO8583 Web\r\n          Simulator</h1>\r\n        <a style={{fontFamily: 'lato-regular', fontSize: '12px'}}\r\n           href={\"/iso/v0/server\"} target={\"_blank\"}\r\n           rel={\"noopener noreferrer\"}>[Manage Servers]</a>\r\n\r\n        <div className=\"App\">\r\n          <NavBar/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//ReactDOM.render(<NavBar />, document.getElementById('nav_bar'));\r\nReactDOM.render(<App style={{backgroundColor:'#fbfff0'}}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}